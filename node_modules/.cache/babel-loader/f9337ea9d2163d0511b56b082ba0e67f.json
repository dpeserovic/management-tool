{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar path_to_regexp_1 = require(\"path-to-regexp\");\n\nvar query_string_1 = require(\"query-string\");\n\nvar generatorCache = {};\n\nvar getGenerator = function (pattern) {\n  var generator = generatorCache[pattern];\n\n  if (generator) {\n    return generator;\n  }\n\n  var compiledGenerator = path_to_regexp_1.compile(pattern);\n  generatorCache[pattern] = compiledGenerator;\n  return compiledGenerator;\n};\n/**\n * Generates a URL from a pattern and parameters.\n * For example,\n *     generateUrl('/departments/:id', { id: 'electronics' })\n *     => '/departments/electronics'\n */\n\n\nexports.generateUrl = function (pattern, params, queryParams) {\n  if (pattern === void 0) {\n    pattern = '/';\n  }\n\n  if (params === void 0) {\n    params = {};\n  }\n\n  if (queryParams === void 0) {\n    queryParams = {};\n  } // inject params\n\n\n  var generator = getGenerator(pattern);\n  var url = generator(params); // inject queryParams (remember to insert the question mark)\n\n  if (Object.keys(queryParams).length > 0) {\n    url = url + \"?\" + query_string_1.stringify(queryParams);\n  }\n\n  return url;\n};\n/**\n * Converts the supplied routerState to a URL\n * @param {RouterStore} routerStore\n * @param {RouterState} routerState\n * @returns {string}\n */\n\n\nexports.routerStateToUrl = function (routerStore, routerState) {\n  var routeName = routerState.routeName,\n      params = routerState.params,\n      queryParams = routerState.queryParams;\n  var route = routerStore.getRoute(routeName);\n  return exports.generateUrl(route.pattern, params, queryParams);\n};","map":{"version":3,"sources":["../../src/adapters/generate-url.ts"],"names":[],"mappings":";;;;;;AAAA,IAAA,gBAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAOA,IAAM,cAAc,GAAmB,EAAvC;;AAEA,IAAM,YAAY,GAAG,UAAC,OAAD,EAAgB;AACjC,MAAM,SAAS,GAAG,cAAc,CAAC,OAAD,CAAhC;;AACA,MAAI,SAAJ,EAAe;AACX,WAAO,SAAP;AACH;;AAED,MAAM,iBAAiB,GAAG,gBAAA,CAAA,OAAA,CAAQ,OAAR,CAA1B;AACA,EAAA,cAAc,CAAC,OAAD,CAAd,GAA0B,iBAA1B;AAEA,SAAO,iBAAP;AACH,CAVD;AAYA;;;;;;;;AAMa,OAAA,CAAA,WAAA,GAAc,UAAC,OAAD,EAAgB,MAAhB,EAA6B,WAA7B,EAA6C;AAA5C,MAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,GAAA;AAAa;;AAAE,MAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,EAAA;AAAW;;AAAE,MAAA,WAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,WAAA,GAAA,EAAA;AAAgB,GAAA,CACpE;;;AACA,MAAM,SAAS,GAAG,YAAY,CAAC,OAAD,CAA9B;AACA,MAAI,GAAG,GAAG,SAAS,CAAC,MAAD,CAAnB,CAHoE,CAKpE;;AACA,MAAI,MAAM,CAAC,IAAP,CAAY,WAAZ,EAAyB,MAAzB,GAAkC,CAAtC,EAAyC;AACrC,IAAA,GAAG,GAAM,GAAG,GAAA,GAAH,GAAO,cAAA,CAAA,SAAA,CAAU,WAAV,CAAhB;AACH;;AAED,SAAO,GAAP;AACH,CAXY;AAab;;;;;;;;AAMa,OAAA,CAAA,gBAAA,GAAmB,UAC5B,WAD4B,EAE5B,WAF4B,EAEJ;AAEhB,MAAA,SAAA,GAAA,WAAA,CAAA,SAAA;AAAA,MAAW,MAAA,GAAA,WAAA,CAAA,MAAX;AAAA,MAAmB,WAAA,GAAA,WAAA,CAAA,WAAnB;AACR,MAAM,KAAK,GAAG,WAAW,CAAC,QAAZ,CAAqB,SAArB,CAAd;AACA,SAAO,OAAA,CAAA,WAAA,CAAY,KAAK,CAAC,OAAlB,EAA2B,MAA3B,EAAmC,WAAnC,CAAP;AACH,CAPY","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar path_to_regexp_1 = require(\"path-to-regexp\");\nvar query_string_1 = require(\"query-string\");\nvar generatorCache = {};\nvar getGenerator = function (pattern) {\n    var generator = generatorCache[pattern];\n    if (generator) {\n        return generator;\n    }\n    var compiledGenerator = path_to_regexp_1.compile(pattern);\n    generatorCache[pattern] = compiledGenerator;\n    return compiledGenerator;\n};\n/**\n * Generates a URL from a pattern and parameters.\n * For example,\n *     generateUrl('/departments/:id', { id: 'electronics' })\n *     => '/departments/electronics'\n */\nexports.generateUrl = function (pattern, params, queryParams) {\n    if (pattern === void 0) { pattern = '/'; }\n    if (params === void 0) { params = {}; }\n    if (queryParams === void 0) { queryParams = {}; }\n    // inject params\n    var generator = getGenerator(pattern);\n    var url = generator(params);\n    // inject queryParams (remember to insert the question mark)\n    if (Object.keys(queryParams).length > 0) {\n        url = url + \"?\" + query_string_1.stringify(queryParams);\n    }\n    return url;\n};\n/**\n * Converts the supplied routerState to a URL\n * @param {RouterStore} routerStore\n * @param {RouterState} routerState\n * @returns {string}\n */\nexports.routerStateToUrl = function (routerStore, routerState) {\n    var routeName = routerState.routeName, params = routerState.params, queryParams = routerState.queryParams;\n    var route = routerStore.getRoute(routeName);\n    return exports.generateUrl(route.pattern, params, queryParams);\n};\n//# sourceMappingURL=generate-url.js.map"]},"metadata":{},"sourceType":"script"}