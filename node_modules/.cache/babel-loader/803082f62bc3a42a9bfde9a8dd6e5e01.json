{"ast":null,"code":"import { observable, action, runInAction } from 'mobx';\nimport { EditItemForm } from '../forms';\nimport Axios from 'axios';\n\nclass EditItemViewStore {\n  // @observable\n  // categories;\n  // @observable\n  // item;\n  constructor(rootStore) {\n    this.navigateDashboard = () => {\n      this.rootStore.routerStore.goTo('dashboard');\n    };\n\n    this.rootStore = rootStore;\n    this.id = this.rootStore.routerStore.router.routerState.params.key;\n    this.form = new EditItemForm({\n      onSuccess: async form => {\n        const values = form.values();\n        console.log('Success', values);\n\n        try {} catch (error) {\n          this.form.invalidate(error.message);\n        }\n      },\n      onError: form => {\n        const values = form.values();\n        console.log('Error', values);\n      }\n    });\n  } // @action.bound\n  // getCategories = async () => {\n  //     const companyCategories = await Axios.get('http://localhost:3001/api/get/categories/' + this.rootStore.authStore.loggedInUser.id);\n  //     console.log('Success', companyCategories);\n  //     runInAction(() => {\n  //         this.categories = companyCategories;\n  //     })\n  // }\n  // @action.bound\n  // getItem = async () => {\n  //     const item = await Axios.get('http://localhost:3001/api/get/item/' + this.id);\n  //     console.log('Success', item);\n  //     runInAction(() => {\n  //         this.item = item;\n  //     })\n  // }\n\n\n}\n\nexport default EditItemViewStore;","map":{"version":3,"sources":["D:/management-tool/src/client/modules/item/stores/EditItemViewStore.js"],"names":["observable","action","runInAction","EditItemForm","Axios","EditItemViewStore","constructor","rootStore","navigateDashboard","routerStore","goTo","id","router","routerState","params","key","form","onSuccess","values","console","log","error","invalidate","message","onError"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,WAA7B,QAAgD,MAAhD;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,iBAAN,CAAwB;AACpB;AACA;AACA;AACA;AAEAC,EAAAA,WAAW,CAACC,SAAD,EAAY;AAAA,SAsCvBC,iBAtCuB,GAsCH,MAAM;AACtB,WAAKD,SAAL,CAAeE,WAAf,CAA2BC,IAA3B,CAAgC,WAAhC;AACH,KAxCsB;;AACnB,SAAKH,SAAL,GAAiBA,SAAjB;AACA,SAAKI,EAAL,GAAU,KAAKJ,SAAL,CAAeE,WAAf,CAA2BG,MAA3B,CAAkCC,WAAlC,CAA8CC,MAA9C,CAAqDC,GAA/D;AAEA,SAAKC,IAAL,GAAY,IAAIb,YAAJ,CAAiB;AACzBc,MAAAA,SAAS,EAAE,MAAOD,IAAP,IAAgB;AACvB,cAAME,MAAM,GAAGF,IAAI,CAACE,MAAL,EAAf;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB;;AACA,YAAI,CACH,CADD,CACE,OAAOG,KAAP,EAAc;AACZ,eAAKL,IAAL,CAAUM,UAAV,CAAqBD,KAAK,CAACE,OAA3B;AACH;AACJ,OARwB;AASzBC,MAAAA,OAAO,EAAGR,IAAD,IAAU;AACf,cAAME,MAAM,GAAGF,IAAI,CAACE,MAAL,EAAf;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,MAArB;AACH;AAZwB,KAAjB,CAAZ;AAcH,GAxBmB,CA0BpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA1CoB;;AAiDxB,eAAeb,iBAAf","sourcesContent":["import { observable, action, runInAction } from 'mobx';\r\nimport { EditItemForm } from '../forms'\r\nimport Axios from 'axios';\r\n\r\nclass EditItemViewStore {\r\n    // @observable\r\n    // categories;\r\n    // @observable\r\n    // item;\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n        this.id = this.rootStore.routerStore.router.routerState.params.key;\r\n\r\n        this.form = new EditItemForm({\r\n            onSuccess: async (form) => {\r\n                const values = form.values();\r\n                console.log('Success', values);\r\n                try {\r\n                } catch (error) {\r\n                    this.form.invalidate(error.message);\r\n                }\r\n            },\r\n            onError: (form) => {\r\n                const values = form.values();\r\n                console.log('Error', values);\r\n            }\r\n        })\r\n    }\r\n\r\n    // @action.bound\r\n    // getCategories = async () => {\r\n    //     const companyCategories = await Axios.get('http://localhost:3001/api/get/categories/' + this.rootStore.authStore.loggedInUser.id);\r\n    //     console.log('Success', companyCategories);\r\n    //     runInAction(() => {\r\n    //         this.categories = companyCategories;\r\n    //     })\r\n    // }\r\n\r\n    // @action.bound\r\n    // getItem = async () => {\r\n    //     const item = await Axios.get('http://localhost:3001/api/get/item/' + this.id);\r\n    //     console.log('Success', item);\r\n    //     runInAction(() => {\r\n    //         this.item = item;\r\n    //     })\r\n    // }\r\n\r\n    navigateDashboard = () => {\r\n        this.rootStore.routerStore.goTo('dashboard');\r\n    }\r\n}\r\n\r\nexport default EditItemViewStore;"]},"metadata":{},"sourceType":"module"}