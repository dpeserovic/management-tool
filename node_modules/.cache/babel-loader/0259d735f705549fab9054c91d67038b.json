{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar mobx_1 = require(\"mobx\");\n\nvar router_store_1 = require(\"../router-store\");\n\nvar generate_url_1 = require(\"./generate-url\");\n\nvar find_matching_route_1 = require(\"./find-matching-route\");\n/**\n * Responsible for keeping the browser address bar and the `RouterState`\n * in sync. It also provides a `goBack()` method to go back in history.\n */\n\n\nvar HistoryAdapter =\n/** @class */\nfunction () {\n  function HistoryAdapter(routerStore, history) {\n    var _this = this;\n\n    this.goToLocation = function (location) {\n      // if (process.env.NODE_ENV === 'development') {\n      //     console.log(\n      //         `HistoryAdapter.goToLocation(${JSON.stringify(location)})`\n      //     );\n      // }\n      // Find the matching route\n      var matchingRoute = find_matching_route_1.findMatchingRoute(location, _this.routerStore.routes);\n\n      if (matchingRoute) {\n        return _this.routerStore.goTo(router_store_1.RouterState.create(matchingRoute));\n      } else {\n        return _this.routerStore.goToNotFound();\n      }\n    };\n\n    this.goBack = function () {\n      _this.history.goBack();\n    };\n\n    this.observeRouterStateChanges = function () {\n      mobx_1.reaction(function () {\n        return _this.routerStore.routerState;\n      }, function (routerState) {\n        var location = _this.history.location;\n        var currentUrl = \"\" + location.pathname + location.search;\n        var routerStateUrl = generate_url_1.routerStateToUrl(_this.routerStore, routerState);\n\n        if (currentUrl !== routerStateUrl) {\n          _this.history.push(routerStateUrl); // if (process.env.NODE_ENV === 'development') {\n          //     console.log(\n          //         `HistoryAdapter: history.push(${routerStateUrl}),`,\n          //         `history.length=${this.history.length}`\n          //     );\n          // }\n\n        }\n      });\n    };\n\n    this.routerStore = routerStore;\n    this.history = history; // Go to current history location\n    // tslint:disable-next-line:no-floating-promises\n\n    this.goToLocation(this.history.location); // Listen for history changes\n\n    this.history.listen(function (location) {\n      return _this.goToLocation(location);\n    });\n  }\n\n  return HistoryAdapter;\n}();\n\nexports.HistoryAdapter = HistoryAdapter;","map":{"version":3,"sources":["../../src/adapters/history-adapter.ts"],"names":[],"mappings":";;;;;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,MAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AACA,IAAA,qBAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;AAEA;;;;;;AAIA,IAAA,cAAA;AAAA;AAAA,YAAA;AAII,WAAA,cAAA,CAAY,WAAZ,EAAsC,OAAtC,EAAsD;AAAtD,QAAA,KAAA,GAAA,IAAA;;AAYA,SAAA,YAAA,GAAe,UAAC,QAAD,EAAmB;AAC9B;AACA;AACA;AACA;AACA;AAEA;AACA,UAAM,aAAa,GAAG,qBAAA,CAAA,iBAAA,CAClB,QADkB,EAElB,KAAI,CAAC,WAAL,CAAiB,MAFC,CAAtB;;AAIA,UAAI,aAAJ,EAAmB;AACf,eAAO,KAAI,CAAC,WAAL,CAAiB,IAAjB,CAAsB,cAAA,CAAA,WAAA,CAAY,MAAZ,CAAmB,aAAnB,CAAtB,CAAP;AACH,OAFD,MAEO;AACH,eAAO,KAAI,CAAC,WAAL,CAAiB,YAAjB,EAAP;AACH;AACJ,KAjBD;;AAmBA,SAAA,MAAA,GAAS,YAAA;AACL,MAAA,KAAI,CAAC,OAAL,CAAa,MAAb;AACH,KAFD;;AAIA,SAAA,yBAAA,GAA4B,YAAA;AACxB,MAAA,MAAA,CAAA,QAAA,CACI,YAAA;AAAM,eAAA,KAAI,CAAC,WAAL,CAAA,WAAA;AAA4B,OADtC,EAEI,UAAC,WAAD,EAAyB;AACrB,YAAM,QAAQ,GAAG,KAAI,CAAC,OAAL,CAAa,QAA9B;AACA,YAAM,UAAU,GAAG,KAAG,QAAQ,CAAC,QAAZ,GAAuB,QAAQ,CAAC,MAAnD;AACA,YAAM,cAAc,GAAG,cAAA,CAAA,gBAAA,CACnB,KAAI,CAAC,WADc,EAEnB,WAFmB,CAAvB;;AAIA,YAAI,UAAU,KAAK,cAAnB,EAAmC;AAC/B,UAAA,KAAI,CAAC,OAAL,CAAa,IAAb,CAAkB,cAAlB,EAD+B,CAE/B;AACA;AACA;AACA;AACA;AACA;;AACH;AACJ,OAlBL;AAoBH,KArBD;;AAlCI,SAAK,WAAL,GAAmB,WAAnB;AACA,SAAK,OAAL,GAAe,OAAf,CAFkD,CAIlD;AACA;;AACA,SAAK,YAAL,CAAkB,KAAK,OAAL,CAAa,QAA/B,EANkD,CAQlD;;AACA,SAAK,OAAL,CAAa,MAAb,CAAoB,UAAA,QAAA,EAAQ;AAAI,aAAA,KAAI,CAAC,YAAL,CAAA,QAAA,CAAA;AAA2B,KAA3D;AACH;;AA+CL,SAAA,cAAA;AAAC,CA7DD,EAAA;;AAAa,OAAA,CAAA,cAAA,GAAA,cAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar mobx_1 = require(\"mobx\");\nvar router_store_1 = require(\"../router-store\");\nvar generate_url_1 = require(\"./generate-url\");\nvar find_matching_route_1 = require(\"./find-matching-route\");\n/**\n * Responsible for keeping the browser address bar and the `RouterState`\n * in sync. It also provides a `goBack()` method to go back in history.\n */\nvar HistoryAdapter = /** @class */ (function () {\n    function HistoryAdapter(routerStore, history) {\n        var _this = this;\n        this.goToLocation = function (location) {\n            // if (process.env.NODE_ENV === 'development') {\n            //     console.log(\n            //         `HistoryAdapter.goToLocation(${JSON.stringify(location)})`\n            //     );\n            // }\n            // Find the matching route\n            var matchingRoute = find_matching_route_1.findMatchingRoute(location, _this.routerStore.routes);\n            if (matchingRoute) {\n                return _this.routerStore.goTo(router_store_1.RouterState.create(matchingRoute));\n            }\n            else {\n                return _this.routerStore.goToNotFound();\n            }\n        };\n        this.goBack = function () {\n            _this.history.goBack();\n        };\n        this.observeRouterStateChanges = function () {\n            mobx_1.reaction(function () { return _this.routerStore.routerState; }, function (routerState) {\n                var location = _this.history.location;\n                var currentUrl = \"\" + location.pathname + location.search;\n                var routerStateUrl = generate_url_1.routerStateToUrl(_this.routerStore, routerState);\n                if (currentUrl !== routerStateUrl) {\n                    _this.history.push(routerStateUrl);\n                    // if (process.env.NODE_ENV === 'development') {\n                    //     console.log(\n                    //         `HistoryAdapter: history.push(${routerStateUrl}),`,\n                    //         `history.length=${this.history.length}`\n                    //     );\n                    // }\n                }\n            });\n        };\n        this.routerStore = routerStore;\n        this.history = history;\n        // Go to current history location\n        // tslint:disable-next-line:no-floating-promises\n        this.goToLocation(this.history.location);\n        // Listen for history changes\n        this.history.listen(function (location) { return _this.goToLocation(location); });\n    }\n    return HistoryAdapter;\n}());\nexports.HistoryAdapter = HistoryAdapter;\n//# sourceMappingURL=history-adapter.js.map"]},"metadata":{},"sourceType":"script"}