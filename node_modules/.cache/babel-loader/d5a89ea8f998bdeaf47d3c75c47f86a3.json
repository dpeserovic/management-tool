{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar path_to_regexp_1 = __importDefault(require(\"path-to-regexp\"));\n\nvar patternInfoCache = {};\n\nvar getPatternInfo = function (pattern) {\n  var patternInfo = patternInfoCache[pattern];\n\n  if (patternInfo) {\n    return patternInfo;\n  }\n\n  var keys = [];\n  var regExp = path_to_regexp_1.default(pattern, keys);\n  var newPatternInfo = {\n    regExp: regExp,\n    keys: keys\n  };\n  patternInfoCache[pattern] = newPatternInfo;\n  return newPatternInfo;\n};\n/**\n * Matches a URL to a pattern.\n * For example,\n *     matchUrl('/departments/electronics', '/departments/:id'\n *     => { id: 'electronics' }\n */\n\n\nexports.matchUrl = function (url, pattern) {\n  var _a = getPatternInfo(pattern),\n      regExp = _a.regExp,\n      keys = _a.keys;\n\n  var match = regExp.exec(url);\n\n  if (!match) {\n    return undefined;\n  } // tslint:disable-next-line:no-unused-variable\n\n\n  var matchedUrl = match[0],\n      values = match.slice(1);\n  return keys.reduce(function (params, key, index) {\n    params[key.name] = values[index];\n    return params;\n  }, {});\n};","map":{"version":3,"sources":["../../src/adapters/match-url.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,IAAA,gBAAA,GAAA,eAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;;AAYA,IAAM,gBAAgB,GAAqB,EAA3C;;AAEA,IAAM,cAAc,GAAG,UAAC,OAAD,EAAgB;AACnC,MAAM,WAAW,GAAG,gBAAgB,CAAC,OAAD,CAApC;;AACA,MAAI,WAAJ,EAAiB;AACb,WAAO,WAAP;AACH;;AAED,MAAM,IAAI,GAAuB,EAAjC;AACA,MAAM,MAAM,GAAG,gBAAA,CAAA,OAAA,CAAa,OAAb,EAAsB,IAAtB,CAAf;AACA,MAAM,cAAc,GAAG;AAAE,IAAA,MAAM,EAAA,MAAR;AAAU,IAAA,IAAI,EAAA;AAAd,GAAvB;AACA,EAAA,gBAAgB,CAAC,OAAD,CAAhB,GAA4B,cAA5B;AAEA,SAAO,cAAP;AACH,CAZD;AAcA;;;;;;;;AAMa,OAAA,CAAA,QAAA,GAAW,UAAC,GAAD,EAAc,OAAd,EAA6B;AAC3C,MAAA,EAAA,GAAA,cAAA,CAAA,OAAA,CAAA;AAAA,MAAE,MAAA,GAAA,EAAA,CAAA,MAAF;AAAA,MAAU,IAAA,GAAA,EAAA,CAAA,IAAV;;AACN,MAAM,KAAK,GAAG,MAAM,CAAC,IAAP,CAAY,GAAZ,CAAd;;AACA,MAAI,CAAC,KAAL,EAAY;AACR,WAAO,SAAP;AACH,GALgD,CAOjD;;;AACO,MAAA,UAAA,GAAA,KAAA,CAAA,CAAA,CAAA;AAAA,MAAY,MAAA,GAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAZ;AAEP,SAAO,IAAI,CAAC,MAAL,CAAY,UAAC,MAAD,EAAoB,GAApB,EAAyB,KAAzB,EAA8B;AAC7C,IAAA,MAAM,CAAC,GAAG,CAAC,IAAL,CAAN,GAAmB,MAAM,CAAC,KAAD,CAAzB;AACA,WAAO,MAAP;AACH,GAHM,EAGJ,EAHI,CAAP;AAIH,CAdY","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar path_to_regexp_1 = __importDefault(require(\"path-to-regexp\"));\nvar patternInfoCache = {};\nvar getPatternInfo = function (pattern) {\n    var patternInfo = patternInfoCache[pattern];\n    if (patternInfo) {\n        return patternInfo;\n    }\n    var keys = [];\n    var regExp = path_to_regexp_1.default(pattern, keys);\n    var newPatternInfo = { regExp: regExp, keys: keys };\n    patternInfoCache[pattern] = newPatternInfo;\n    return newPatternInfo;\n};\n/**\n * Matches a URL to a pattern.\n * For example,\n *     matchUrl('/departments/electronics', '/departments/:id'\n *     => { id: 'electronics' }\n */\nexports.matchUrl = function (url, pattern) {\n    var _a = getPatternInfo(pattern), regExp = _a.regExp, keys = _a.keys;\n    var match = regExp.exec(url);\n    if (!match) {\n        return undefined;\n    }\n    // tslint:disable-next-line:no-unused-variable\n    var matchedUrl = match[0], values = match.slice(1);\n    return keys.reduce(function (params, key, index) {\n        params[key.name] = values[index];\n        return params;\n    }, {});\n};\n//# sourceMappingURL=match-url.js.map"]},"metadata":{},"sourceType":"script"}