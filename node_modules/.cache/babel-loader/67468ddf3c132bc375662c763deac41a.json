{"ast":null,"code":"import _initializerDefineProperty from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _class, _descriptor, _descriptor2, _temp;\n\nimport { action, observable, runInAction } from \"mobx\";\nimport Axios from \"axios\";\nlet AddItemViewStore = (_dec = action.bound, (_class = (_temp = class AddItemViewStore {\n  constructor(rootStore) {\n    _initializerDefineProperty(this, \"categories\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"getCategories\", _descriptor2, this);\n\n    this.navigateDashboard = () => {\n      this.rootStore.routerStore.goTo('dashboard');\n    };\n\n    this.rootStore = rootStore;\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"categories\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"getCategories\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async () => {\n      debugger;\n      const categories = await Axios.get('http://localhost:3001/api/get/categories');\n      debugger;\n      runInAction(() => {\n        this.categories = categories;\n      });\n    };\n  }\n})), _class));\nexport default AddItemViewStore;","map":{"version":3,"sources":["D:/management-tool/src/client/modules/item/stores/AddItemViewStore.js"],"names":["action","observable","runInAction","Axios","AddItemViewStore","bound","constructor","rootStore","navigateDashboard","routerStore","goTo","categories","get"],"mappings":";;;;;;AAAA,SAASA,MAAT,EAAiBC,UAAjB,EAA6BC,WAA7B,QAAgD,MAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;IAEMC,gB,WAODJ,MAAM,CAACK,K,qBAPZ,MAAMD,gBAAN,CAAuB;AAGnBE,EAAAA,WAAW,CAACC,SAAD,EAAY;AAAA;;AAAA;;AAAA,SAcvBC,iBAduB,GAcH,MAAM;AACtB,WAAKD,SAAL,CAAeE,WAAf,CAA2BC,IAA3B,CAAgC,WAAhC;AACH,KAhBsB;;AACnB,SAAKH,SAAL,GAAiBA,SAAjB;AACH;;AALkB,C,oFAClBN,U;;;;;;;;;;WAOe,YAAY;AACxB;AACA,YAAMU,UAAU,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,0CAAV,CAAzB;AACA;AACAV,MAAAA,WAAW,CAAC,MAAM;AACd,aAAKS,UAAL,GAAkBA,UAAlB;AACH,OAFU,CAAX;AAGH,K;;;AAOL,eAAeP,gBAAf","sourcesContent":["import { action, observable, runInAction } from \"mobx\";\r\nimport Axios from \"axios\";\r\n\r\nclass AddItemViewStore {\r\n    @observable\r\n    categories;\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n    }\r\n\r\n    @action.bound\r\n    getCategories = async () => {\r\n        debugger\r\n        const categories = await Axios.get('http://localhost:3001/api/get/categories');\r\n        debugger\r\n        runInAction(() => {\r\n            this.categories = categories;\r\n        })\r\n    }\r\n\r\n    navigateDashboard = () => {\r\n        this.rootStore.routerStore.goTo('dashboard');\r\n    }\r\n}\r\n\r\nexport default AddItemViewStore;"]},"metadata":{},"sourceType":"module"}