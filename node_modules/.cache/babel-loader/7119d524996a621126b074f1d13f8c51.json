{"ast":null,"code":"import _initializerDefineProperty from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _class, _descriptor, _descriptor2, _temp;\n\nimport { observable, action, runInAction } from 'mobx';\nimport Axios from 'axios';\nlet ItemHistoryViewStore = (_dec = action.bound, (_class = (_temp = class ItemHistoryViewStore {\n  constructor(rootStore) {\n    _initializerDefineProperty(this, \"logs\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"getLogs\", _descriptor2, this);\n\n    this.navigateVirtualWarehouse = () => {\n      this.rootStore.routerStore.goTo('virtualWarehouse');\n    };\n\n    this.rootStore = rootStore;\n    this.itemId = this.rootStore.routerStore.router.routerState.params.id;\n    this.test = null;\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"logs\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"getLogs\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async () => {\n      const getLogs = await Axios.get('http://localhost:3001/api/get/logs/' + this.itemId);\n      console.log('Success', getLogs);\n      runInAction(() => {\n        this.logs = getLogs;\n      });\n      this.test = getLogs;\n      debugger;\n    };\n  }\n})), _class));\nexport default ItemHistoryViewStore;","map":{"version":3,"sources":["D:/management-tool/src/client/modules/item/stores/ItemHistoryViewStore.js"],"names":["observable","action","runInAction","Axios","ItemHistoryViewStore","bound","constructor","rootStore","navigateVirtualWarehouse","routerStore","goTo","itemId","router","routerState","params","id","test","getLogs","get","console","log","logs"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,WAA7B,QAAgD,MAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;IAEMC,oB,WAUDH,MAAM,CAACI,K,qBAVZ,MAAMD,oBAAN,CAA2B;AAIvBE,EAAAA,WAAW,CAACC,SAAD,EAAY;AAAA;;AAAA;;AAAA,SAiBvBC,wBAjBuB,GAiBI,MAAM;AAC7B,WAAKD,SAAL,CAAeE,WAAf,CAA2BC,IAA3B,CAAgC,kBAAhC;AACH,KAnBsB;;AACnB,SAAKH,SAAL,GAAiBA,SAAjB;AACA,SAAKI,MAAL,GAAc,KAAKJ,SAAL,CAAeE,WAAf,CAA2BG,MAA3B,CAAkCC,WAAlC,CAA8CC,MAA9C,CAAqDC,EAAnE;AACA,SAAKC,IAAL,GAAY,IAAZ;AACH;;AARsB,C,8EACtBhB,U;;;;;;;;;;WAUS,YAAY;AAClB,YAAMiB,OAAO,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAU,wCAAwC,KAAKP,MAAvD,CAAtB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,OAAvB;AACAf,MAAAA,WAAW,CAAC,MAAM;AACd,aAAKmB,IAAL,GAAYJ,OAAZ;AACH,OAFU,CAAX;AAGA,WAAKD,IAAL,GAAYC,OAAZ;AACA;AACH,K;;;AAOL,eAAeb,oBAAf","sourcesContent":["import { observable, action, runInAction } from 'mobx';\r\nimport Axios from 'axios';\r\n\r\nclass ItemHistoryViewStore {\r\n    @observable\r\n    logs;\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n        this.itemId = this.rootStore.routerStore.router.routerState.params.id;\r\n        this.test = null;\r\n    }\r\n\r\n    @action.bound\r\n    getLogs = async () => {\r\n        const getLogs = await Axios.get('http://localhost:3001/api/get/logs/' + this.itemId);\r\n        console.log('Success', getLogs);\r\n        runInAction(() => {\r\n            this.logs = getLogs;\r\n        })\r\n        this.test = getLogs;\r\n        debugger\r\n    }\r\n\r\n    navigateVirtualWarehouse = () => {\r\n        this.rootStore.routerStore.goTo('virtualWarehouse');\r\n    }\r\n}\r\n\r\nexport default ItemHistoryViewStore;"]},"metadata":{},"sourceType":"module"}