{"ast":null,"code":"import _initializerDefineProperty from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _temp;\n\nimport { observable } from 'mobx';\nlet DashboardViewStore = (_class = (_temp = class DashboardViewStore {\n  constructor(rootStore) {\n    _initializerDefineProperty(this, \"user\", _descriptor, this);\n\n    this.logOut = () => {\n      this.rootStore.authStore.logOut();\n    };\n\n    this.rootStore = rootStore;\n    this.user = JSON.parse(sessionStorage.getItem('user'));\n    debugger;\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"user\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n})), _class);\nexport default DashboardViewStore;","map":{"version":3,"sources":["D:/management-tool/src/client/modules/dashboard/stores/DashboardViewStore.js"],"names":["observable","DashboardViewStore","constructor","rootStore","logOut","authStore","user","JSON","parse","sessionStorage","getItem"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,MAA3B;IAEMC,kB,sBAAN,MAAMA,kBAAN,CAAyB;AAErBC,EAAAA,WAAW,CAACC,SAAD,EAAY;AAAA;;AAAA,SAMvBC,MANuB,GAMd,MAAM;AACX,WAAKD,SAAL,CAAeE,SAAf,CAAyBD,MAAzB;AACH,KARsB;;AACnB,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKG,IAAL,GAAYC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAX,CAAZ;AACA;AACH;;AANoB,C,8EACpBV,U;;;;;WAAkB,I;;;AAYvB,eAAeC,kBAAf","sourcesContent":["import { observable } from 'mobx'\r\n\r\nclass DashboardViewStore {\r\n    @observable user = null;\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n        this.user = JSON.parse(sessionStorage.getItem('user'));\r\n        debugger\r\n    }\r\n\r\n    logOut = () => {\r\n        this.rootStore.authStore.logOut();\r\n    }\r\n}\r\n\r\nexport default DashboardViewStore;"]},"metadata":{},"sourceType":"module"}