{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar value_equal_1 = require(\"./utils/value-equal\");\n\nvar mobx_1 = require(\"mobx\");\n/**\n * Holds the state of the router. Always use the constructor to create\n * an instance. Once an instance is created, don't mutate it - create a\n * fresh instance instead.\n */\n\n\nvar RouterState =\n/** @class */\nfunction () {\n  /**\n   * Creates RouterState\n   * @param {string} routeName, e.g. 'department'\n   * @param {StringMap} params, e.g. { id: 'electronics' }\n   * @param {[key: string]: any} queryParams, e.g. { q: 'apple' } or { items: ['E1', 'E2'] }\n   */\n  function RouterState(routeName, params, queryParams) {\n    if (params === void 0) {\n      params = {};\n    }\n\n    if (queryParams === void 0) {\n      queryParams = {};\n    }\n\n    this.routeName = routeName;\n    this.params = params;\n    this.queryParams = queryParams;\n  }\n\n  RouterState.create = function (jsRouterState) {\n    var routeName = jsRouterState.routeName,\n        params = jsRouterState.params,\n        queryParams = jsRouterState.queryParams;\n    return new RouterState(routeName, params, queryParams);\n  };\n\n  RouterState.prototype.isEqual = function (other) {\n    return value_equal_1.valueEqual(this, other);\n  };\n\n  return RouterState;\n}();\n\nexports.RouterState = RouterState;\nvar INITIAL_ROUTE = {\n  name: '__initial__',\n  pattern: ''\n};\n/**\n * Holds the router state. It allows transitioning between states using\n * the `goTo()` method.\n */\n\nvar RouterStore =\n/** @class */\nfunction () {\n  function RouterStore(rootStore, routes, notFoundState, initialState) {\n    this.isTransitioning = false;\n    this.rootStore = rootStore;\n    this.routes = routes;\n    this.notFoundState = notFoundState; // Set the initial state\n\n    if (initialState) {\n      this.routerState = RouterState.create(initialState);\n    } else {\n      // Create an artificial route and set initial state to it\n      this.routes.push(INITIAL_ROUTE);\n      this.routerState = new RouterState(INITIAL_ROUTE.name);\n    }\n  }\n\n  RouterStore.prototype.hydrate = function (state) {\n    this.routerState = RouterState.create(state);\n  };\n\n  RouterStore.prototype.serialize = function () {\n    return __assign({}, this.routerState);\n  };\n\n  RouterStore.prototype.setErrorHook = function (onError) {\n    this.onError = onError;\n  };\n\n  RouterStore.prototype.goTo = function (toStateOrRouteName, params, queryParams) {\n    if (params === void 0) {\n      params = {};\n    }\n\n    if (queryParams === void 0) {\n      queryParams = {};\n    }\n\n    var toState = typeof toStateOrRouteName === 'string' ? new RouterState(toStateOrRouteName, params, queryParams) : toStateOrRouteName;\n    var fromState = this.routerState;\n    return this.transition(fromState, toState);\n  };\n\n  RouterStore.prototype.goToNotFound = function () {\n    this.setRouterState(this.notFoundState);\n    return Promise.resolve(this.notFoundState);\n  };\n\n  RouterStore.prototype.getRoute = function (routeName) {\n    for (var i = 0; i < this.routes.length; i++) {\n      var route = this.routes[i];\n\n      if (route.name === routeName) {\n        return route;\n      }\n    }\n\n    throw new Error(\"Route \" + routeName + \" does not exist\");\n  };\n\n  RouterStore.prototype.getCurrentRoute = function () {\n    return this.getRoute(this.routerState.routeName);\n  };\n  /**\n   * Requests a transition from fromState to toState. Note that the\n   * actual transition may be different from the requested one\n   * based on enter and exit hooks.\n   */\n\n\n  RouterStore.prototype.transition = function (fromState, toState) {\n    return __awaiter(this, void 0, void 0, function () {\n      var fromStateStr, _a, beforeExit, onExit, _b, beforeEnter, onEnter, err_1, redirectState;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            // If fromState = toState, do nothing\n            // This is important to avoid infinite loops caused by RouterStore.goTo()\n            // triggering a change in history, which in turn causes HistoryAdapter\n            // to call RouterStore.goTo().\n            if (fromState.isEqual(toState)) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV === 'development') {\n                fromStateStr = JSON.stringify(fromState); // console.log(\n                //     `RouterStore.transition(${fromStateStr}):`,\n                //     'states are equal, skipping'\n                // );\n              }\n\n              return [2\n              /*return*/\n              , toState];\n            }\n\n            _a = this.getRoute(fromState.routeName), beforeExit = _a.beforeExit, onExit = _a.onExit;\n            _b = this.getRoute(toState.routeName), beforeEnter = _b.beforeEnter, onEnter = _b.onEnter; // Call the transition hook chain\n\n            this.isTransitioning = true;\n            _c.label = 1;\n\n          case 1:\n            _c.trys.push([1, 10, 11, 12]);\n\n            if (!beforeExit) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , beforeExit(fromState, toState, this)];\n\n          case 2:\n            _c.sent();\n\n            _c.label = 3;\n\n          case 3:\n            if (!beforeEnter) return [3\n            /*break*/\n            , 5];\n            return [4\n            /*yield*/\n            , beforeEnter(fromState, toState, this)];\n\n          case 4:\n            _c.sent();\n\n            _c.label = 5;\n\n          case 5:\n            if (!onExit) return [3\n            /*break*/\n            , 7];\n            return [4\n            /*yield*/\n            , onExit(fromState, toState, this)];\n\n          case 6:\n            _c.sent();\n\n            _c.label = 7;\n\n          case 7:\n            if (!onEnter) return [3\n            /*break*/\n            , 9];\n            return [4\n            /*yield*/\n            , onEnter(fromState, toState, this)];\n\n          case 8:\n            _c.sent();\n\n            _c.label = 9;\n\n          case 9:\n            this.setRouterState(toState);\n            return [2\n            /*return*/\n            , toState];\n\n          case 10:\n            err_1 = _c.sent(); // If error is an instance of RouterState then go to that state\n\n            if (err_1 instanceof RouterState) {\n              redirectState = err_1;\n\n              if (redirectState.isEqual(toState)) {\n                this.setRouterState(redirectState);\n                return [2\n                /*return*/\n                , redirectState];\n              } else {\n                return [2\n                /*return*/\n                , this.goTo(redirectState)];\n              }\n            } // Else if error hook is specified, call it\n\n\n            if (this.onError) {\n              return [2\n              /*return*/\n              , this.onError(err_1)];\n            } // Else handle the error internally\n\n\n            throw new Error('toState is undefined');\n\n          case 11:\n            this.isTransitioning = false;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 12:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  RouterStore.prototype.setRouterState = function (routerState) {\n    this.routerState = routerState;\n    this.isTransitioning = false;\n  };\n\n  __decorate([mobx_1.observable.ref], RouterStore.prototype, \"routerState\", void 0);\n\n  __decorate([mobx_1.observable], RouterStore.prototype, \"isTransitioning\", void 0);\n\n  __decorate([mobx_1.action], RouterStore.prototype, \"hydrate\", null);\n\n  __decorate([mobx_1.action], RouterStore.prototype, \"setRouterState\", null);\n\n  return RouterStore;\n}();\n\nexports.RouterStore = RouterStore;","map":{"version":3,"sources":["../src/router-store.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar value_equal_1 = require(\"./utils/value-equal\");\nvar mobx_1 = require(\"mobx\");\n/**\n * Holds the state of the router. Always use the constructor to create\n * an instance. Once an instance is created, don't mutate it - create a\n * fresh instance instead.\n */\nvar RouterState = /** @class */ (function () {\n    /**\n     * Creates RouterState\n     * @param {string} routeName, e.g. 'department'\n     * @param {StringMap} params, e.g. { id: 'electronics' }\n     * @param {[key: string]: any} queryParams, e.g. { q: 'apple' } or { items: ['E1', 'E2'] }\n     */\n    function RouterState(routeName, params, queryParams) {\n        if (params === void 0) { params = {}; }\n        if (queryParams === void 0) { queryParams = {}; }\n        this.routeName = routeName;\n        this.params = params;\n        this.queryParams = queryParams;\n    }\n    RouterState.create = function (jsRouterState) {\n        var routeName = jsRouterState.routeName, params = jsRouterState.params, queryParams = jsRouterState.queryParams;\n        return new RouterState(routeName, params, queryParams);\n    };\n    RouterState.prototype.isEqual = function (other) {\n        return value_equal_1.valueEqual(this, other);\n    };\n    return RouterState;\n}());\nexports.RouterState = RouterState;\nvar INITIAL_ROUTE = {\n    name: '__initial__',\n    pattern: ''\n};\n/**\n * Holds the router state. It allows transitioning between states using\n * the `goTo()` method.\n */\nvar RouterStore = /** @class */ (function () {\n    function RouterStore(rootStore, routes, notFoundState, initialState) {\n        this.isTransitioning = false;\n        this.rootStore = rootStore;\n        this.routes = routes;\n        this.notFoundState = notFoundState;\n        // Set the initial state\n        if (initialState) {\n            this.routerState = RouterState.create(initialState);\n        }\n        else {\n            // Create an artificial route and set initial state to it\n            this.routes.push(INITIAL_ROUTE);\n            this.routerState = new RouterState(INITIAL_ROUTE.name);\n        }\n    }\n    RouterStore.prototype.hydrate = function (state) {\n        this.routerState = RouterState.create(state);\n    };\n    RouterStore.prototype.serialize = function () {\n        return __assign({}, this.routerState);\n    };\n    RouterStore.prototype.setErrorHook = function (onError) {\n        this.onError = onError;\n    };\n    RouterStore.prototype.goTo = function (toStateOrRouteName, params, queryParams) {\n        if (params === void 0) { params = {}; }\n        if (queryParams === void 0) { queryParams = {}; }\n        var toState = typeof toStateOrRouteName === 'string'\n            ? new RouterState(toStateOrRouteName, params, queryParams)\n            : toStateOrRouteName;\n        var fromState = this.routerState;\n        return this.transition(fromState, toState);\n    };\n    RouterStore.prototype.goToNotFound = function () {\n        this.setRouterState(this.notFoundState);\n        return Promise.resolve(this.notFoundState);\n    };\n    RouterStore.prototype.getRoute = function (routeName) {\n        for (var i = 0; i < this.routes.length; i++) {\n            var route = this.routes[i];\n            if (route.name === routeName) {\n                return route;\n            }\n        }\n        throw new Error(\"Route \" + routeName + \" does not exist\");\n    };\n    RouterStore.prototype.getCurrentRoute = function () {\n        return this.getRoute(this.routerState.routeName);\n    };\n    /**\n     * Requests a transition from fromState to toState. Note that the\n     * actual transition may be different from the requested one\n     * based on enter and exit hooks.\n     */\n    RouterStore.prototype.transition = function (fromState, toState) {\n        return __awaiter(this, void 0, void 0, function () {\n            var fromStateStr, _a, beforeExit, onExit, _b, beforeEnter, onEnter, err_1, redirectState;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        // If fromState = toState, do nothing\n                        // This is important to avoid infinite loops caused by RouterStore.goTo()\n                        // triggering a change in history, which in turn causes HistoryAdapter\n                        // to call RouterStore.goTo().\n                        if (fromState.isEqual(toState)) {\n                            /* istanbul ignore if */\n                            if (process.env.NODE_ENV === 'development') {\n                                fromStateStr = JSON.stringify(fromState);\n                                // console.log(\n                                //     `RouterStore.transition(${fromStateStr}):`,\n                                //     'states are equal, skipping'\n                                // );\n                            }\n                            return [2 /*return*/, toState];\n                        }\n                        _a = this.getRoute(fromState.routeName), beforeExit = _a.beforeExit, onExit = _a.onExit;\n                        _b = this.getRoute(toState.routeName), beforeEnter = _b.beforeEnter, onEnter = _b.onEnter;\n                        // Call the transition hook chain\n                        this.isTransitioning = true;\n                        _c.label = 1;\n                    case 1:\n                        _c.trys.push([1, 10, 11, 12]);\n                        if (!beforeExit) return [3 /*break*/, 3];\n                        return [4 /*yield*/, beforeExit(fromState, toState, this)];\n                    case 2:\n                        _c.sent();\n                        _c.label = 3;\n                    case 3:\n                        if (!beforeEnter) return [3 /*break*/, 5];\n                        return [4 /*yield*/, beforeEnter(fromState, toState, this)];\n                    case 4:\n                        _c.sent();\n                        _c.label = 5;\n                    case 5:\n                        if (!onExit) return [3 /*break*/, 7];\n                        return [4 /*yield*/, onExit(fromState, toState, this)];\n                    case 6:\n                        _c.sent();\n                        _c.label = 7;\n                    case 7:\n                        if (!onEnter) return [3 /*break*/, 9];\n                        return [4 /*yield*/, onEnter(fromState, toState, this)];\n                    case 8:\n                        _c.sent();\n                        _c.label = 9;\n                    case 9:\n                        this.setRouterState(toState);\n                        return [2 /*return*/, toState];\n                    case 10:\n                        err_1 = _c.sent();\n                        // If error is an instance of RouterState then go to that state\n                        if (err_1 instanceof RouterState) {\n                            redirectState = err_1;\n                            if (redirectState.isEqual(toState)) {\n                                this.setRouterState(redirectState);\n                                return [2 /*return*/, redirectState];\n                            }\n                            else {\n                                return [2 /*return*/, this.goTo(redirectState)];\n                            }\n                        }\n                        // Else if error hook is specified, call it\n                        if (this.onError) {\n                            return [2 /*return*/, this.onError(err_1)];\n                        }\n                        // Else handle the error internally\n                        throw new Error('toState is undefined');\n                    case 11:\n                        this.isTransitioning = false;\n                        return [7 /*endfinally*/];\n                    case 12: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RouterStore.prototype.setRouterState = function (routerState) {\n        this.routerState = routerState;\n        this.isTransitioning = false;\n    };\n    __decorate([\n        mobx_1.observable.ref\n    ], RouterStore.prototype, \"routerState\", void 0);\n    __decorate([\n        mobx_1.observable\n    ], RouterStore.prototype, \"isTransitioning\", void 0);\n    __decorate([\n        mobx_1.action\n    ], RouterStore.prototype, \"hydrate\", null);\n    __decorate([\n        mobx_1.action\n    ], RouterStore.prototype, \"setRouterState\", null);\n    return RouterStore;\n}());\nexports.RouterStore = RouterStore;\n//# sourceMappingURL=router-store.js.map"]},"metadata":{},"sourceType":"script"}