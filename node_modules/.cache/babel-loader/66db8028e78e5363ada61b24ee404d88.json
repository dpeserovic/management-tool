{"ast":null,"code":"import _initializerDefineProperty from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _temp;\n\nimport { computed, observable } from 'mobx';\nlet DashboardViewStore = (_class = (_temp = class DashboardViewStore {\n  get isOwner() {\n    if (this.person.hasOwnProperty('name')) {\n      return true;\n    }\n\n    return false;\n  }\n\n  constructor(rootStore) {\n    _initializerDefineProperty(this, \"person\", _descriptor, this);\n\n    this.navigateCreateCategory = () => {\n      this.rootStore.routerStore.goTo('createCategory');\n    };\n\n    this.navigateAddItem = () => {\n      this.rootStore.routerStore.goTo('addItem');\n    };\n\n    this.navigateVirtualWarehouse = () => {\n      this.rootStore.routerStore.goTo('virtualWarehouse');\n    };\n\n    this.navigateMyProfile = () => {\n      this.rootStore.routerStore.goTo('myProfile');\n    };\n\n    this.logOut = () => {\n      this.rootStore.authStore.logOut();\n    };\n\n    this.rootStore = rootStore;\n    this.person = JSON.parse(sessionStorage.getItem('person'));\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"person\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"isOwner\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isOwner\"), _class.prototype)), _class);\nexport default DashboardViewStore;","map":{"version":3,"sources":["D:/management-tool/src/client/modules/dashboard/stores/DashboardViewStore.js"],"names":["computed","observable","DashboardViewStore","isOwner","person","hasOwnProperty","constructor","rootStore","navigateCreateCategory","routerStore","goTo","navigateAddItem","navigateVirtualWarehouse","navigateMyProfile","logOut","authStore","JSON","parse","sessionStorage","getItem"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,MAArC;IAEMC,kB,sBAAN,MAAMA,kBAAN,CAAyB;AAGrB,MACIC,OADJ,GACc;AACV,QAAI,KAAKC,MAAL,CAAYC,cAAZ,CAA2B,MAA3B,CAAJ,EAAwC;AACpC,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH;;AAEDC,EAAAA,WAAW,CAACC,SAAD,EAAY;AAAA;;AAAA,SAKvBC,sBALuB,GAKE,MAAM;AAC3B,WAAKD,SAAL,CAAeE,WAAf,CAA2BC,IAA3B,CAAgC,gBAAhC;AACH,KAPsB;;AAAA,SASvBC,eATuB,GASL,MAAM;AACpB,WAAKJ,SAAL,CAAeE,WAAf,CAA2BC,IAA3B,CAAgC,SAAhC;AACH,KAXsB;;AAAA,SAavBE,wBAbuB,GAaI,MAAM;AAC7B,WAAKL,SAAL,CAAeE,WAAf,CAA2BC,IAA3B,CAAgC,kBAAhC;AACH,KAfsB;;AAAA,SAiBvBG,iBAjBuB,GAiBH,MAAM;AACtB,WAAKN,SAAL,CAAeE,WAAf,CAA2BC,IAA3B,CAAgC,WAAhC;AACH,KAnBsB;;AAAA,SAqBvBI,MArBuB,GAqBd,MAAM;AACX,WAAKP,SAAL,CAAeQ,SAAf,CAAyBD,MAAzB;AACH,KAvBsB;;AACnB,SAAKP,SAAL,GAAiBA,SAAjB;AACA,SAAKH,MAAL,GAAcY,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,QAAvB,CAAX,CAAd;AACH;;AAdoB,C,gFACpBlB,U;;;;;WAAoB,I;;4DAEpBD,Q;AAkCL,eAAeE,kBAAf","sourcesContent":["import { computed, observable } from 'mobx';\r\n\r\nclass DashboardViewStore {\r\n    @observable person = null;\r\n\r\n    @computed\r\n    get isOwner() {\r\n        if (this.person.hasOwnProperty('name')) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n        this.person = JSON.parse(sessionStorage.getItem('person'));\r\n    }\r\n\r\n    navigateCreateCategory = () => {\r\n        this.rootStore.routerStore.goTo('createCategory');\r\n    }\r\n\r\n    navigateAddItem = () => {\r\n        this.rootStore.routerStore.goTo('addItem');\r\n    }\r\n\r\n    navigateVirtualWarehouse = () => {\r\n        this.rootStore.routerStore.goTo('virtualWarehouse');\r\n    }\r\n\r\n    navigateMyProfile = () => {\r\n        this.rootStore.routerStore.goTo('myProfile');\r\n    }\r\n\r\n    logOut = () => {\r\n        this.rootStore.authStore.logOut();\r\n    }\r\n}\r\n\r\nexport default DashboardViewStore;"]},"metadata":{},"sourceType":"module"}