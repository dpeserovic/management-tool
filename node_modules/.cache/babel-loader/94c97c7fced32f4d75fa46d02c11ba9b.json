{"ast":null,"code":"import _initializerDefineProperty from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _dec2, _dec3, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _temp;\n\nimport { observable, action, runInAction } from 'mobx';\nimport Axios from 'axios';\nlet SupervisionViewStore = (_dec = action.bound, _dec2 = action.bound, _dec3 = action.bound, (_class = (_temp = class SupervisionViewStore {\n  constructor(rootStore) {\n    _initializerDefineProperty(this, \"users\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"items\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"getUsers\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"getItems\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"getCategories\", _descriptor5, this);\n\n    this.navigateDashboard = () => {\n      this.rootStore.routerStore.goTo('dashboard');\n    };\n\n    this.rootStore = rootStore;\n    this.companyId = this.rootStore.authStore.loggedInUser.id;\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"users\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"items\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"getUsers\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async () => {\n      const getUsers = await Axios.get('http://localhost:3001/api/get/users/' + this.companyId);\n      console.log('Success', getUsers);\n      runInAction(() => {\n        this.users = getUsers;\n      });\n    };\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"getItems\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async () => {\n      const getItems = await Axios.get('http://localhost:3001/api/get/all-taken-items/' + this.companyId);\n      console.log('Success', getItems);\n      runInAction(() => {\n        this.items = getItems;\n      });\n    };\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"getCategories\", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async () => {\n      const getCategories = await Axios.get('http://localhost:3001/api/get/categories/' + this.companyId);\n      console.log('Success', getCategories);\n      runInAction(() => {\n        this.categories = getCategories;\n      });\n    };\n  }\n})), _class));\nexport default SupervisionViewStore;","map":{"version":3,"sources":["D:/management-tool/src/client/modules/supervision/stores/SupervisionViewStore.js"],"names":["observable","action","runInAction","Axios","SupervisionViewStore","bound","constructor","rootStore","navigateDashboard","routerStore","goTo","companyId","authStore","loggedInUser","id","getUsers","get","console","log","users","getItems","items","getCategories","categories"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,WAA7B,QAAgD,MAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;IAEMC,oB,WASDH,MAAM,CAACI,K,UASPJ,MAAM,CAACI,K,UASPJ,MAAM,CAACI,K,qBA3BZ,MAAMD,oBAAN,CAA2B;AAIvBE,EAAAA,WAAW,CAACC,SAAD,EAAY;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,SAgCvBC,iBAhCuB,GAgCH,MAAM;AACtB,WAAKD,SAAL,CAAeE,WAAf,CAA2BC,IAA3B,CAAgC,WAAhC;AACH,KAlCsB;;AACnB,SAAKH,SAAL,GAAiBA,SAAjB;AACA,SAAKI,SAAL,GAAiB,KAAKJ,SAAL,CAAeK,SAAf,CAAyBC,YAAzB,CAAsCC,EAAvD;AACH;;AAPsB,C,+EACtBd,U;;;;;yEACAA,U;;;;;;;;;;WAQU,YAAY;AACnB,YAAMe,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,yCAAyC,KAAKL,SAAxD,CAAvB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,QAAvB;AACAb,MAAAA,WAAW,CAAC,MAAM;AACd,aAAKiB,KAAL,GAAaJ,QAAb;AACH,OAFU,CAAX;AAGH,K;;;;;;;WAGU,YAAY;AACnB,YAAMK,QAAQ,GAAG,MAAMjB,KAAK,CAACa,GAAN,CAAU,mDAAmD,KAAKL,SAAlE,CAAvB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,QAAvB;AACAlB,MAAAA,WAAW,CAAC,MAAM;AACd,aAAKmB,KAAL,GAAaD,QAAb;AACH,OAFU,CAAX;AAGH,K;;;;;;;WAGe,YAAY;AACxB,YAAME,aAAa,GAAG,MAAMnB,KAAK,CAACa,GAAN,CAAU,8CAA8C,KAAKL,SAA7D,CAA5B;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBI,aAAvB;AACApB,MAAAA,WAAW,CAAC,MAAM;AACd,aAAKqB,UAAL,GAAkBD,aAAlB;AACH,OAFU,CAAX;AAGH,K;;;AAOL,eAAelB,oBAAf","sourcesContent":["import { observable, action, runInAction } from 'mobx';\r\nimport Axios from 'axios';\r\n\r\nclass SupervisionViewStore {\r\n    @observable users;\r\n    @observable items;\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n        this.companyId = this.rootStore.authStore.loggedInUser.id;\r\n    }\r\n\r\n    @action.bound\r\n    getUsers = async () => {\r\n        const getUsers = await Axios.get('http://localhost:3001/api/get/users/' + this.companyId);\r\n        console.log('Success', getUsers);\r\n        runInAction(() => {\r\n            this.users = getUsers;\r\n        })\r\n    }\r\n\r\n    @action.bound\r\n    getItems = async () => {\r\n        const getItems = await Axios.get('http://localhost:3001/api/get/all-taken-items/' + this.companyId);\r\n        console.log('Success', getItems);\r\n        runInAction(() => {\r\n            this.items = getItems;\r\n        })\r\n    }\r\n\r\n    @action.bound\r\n    getCategories = async () => {\r\n        const getCategories = await Axios.get('http://localhost:3001/api/get/categories/' + this.companyId);\r\n        console.log('Success', getCategories);\r\n        runInAction(() => {\r\n            this.categories = getCategories;\r\n        })\r\n    }\r\n\r\n    navigateDashboard = () => {\r\n        this.rootStore.routerStore.goTo('dashboard');\r\n    }\r\n}\r\n\r\nexport default SupervisionViewStore;"]},"metadata":{},"sourceType":"module"}