{"ast":null,"code":"import _initializerDefineProperty from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _class, _descriptor, _descriptor2, _temp;\n\nimport { observable, action, runInAction } from 'mobx';\nimport { EditCategoryForm } from '../forms';\nimport Axios from 'axios';\nlet EditCategoryViewStore = (_dec = action.bound, (_class = (_temp = class EditCategoryViewStore {\n  constructor(rootStore) {\n    _initializerDefineProperty(this, \"category\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"getCategory\", _descriptor2, this);\n\n    this.navigateCreateCategory = () => {\n      this.rootStore.routerStore.goTo('createCategory');\n    };\n\n    this.rootStore = rootStore;\n    this.categoryId = this.rootStore.routerStore.router.routerState.params.id;\n    this.form = new EditCategoryForm({\n      onInit: async () => {\n        await this.getCategory();\n        this.form.set('value', {\n          type: this.category.data[0].type\n        });\n      },\n      onSuccess: async form => {\n        const values = form.values();\n        console.log('Success', values);\n\n        try {// const editCategory = await Axios.post('http://localhost:3001/api/edit/category/' + this.categoryId, { type: values.type });\n          // console.log('Success', editCategory);\n          // const updateItems = await Axios.post('http://localhost:3001/api/update/items/' + this.categoryId, { type: values.type });\n          // console.log('Success', updateItems);\n          // !editCategory.data.errno && !updateItems.data.errno ? this.rootStore.notificationStore.success('Success') : this.rootStore.notificationStore.error('Error');\n        } catch (error) {\n          this.form.invalidate(error.message);\n          this.rootStore.notificationStore.error(error.message);\n        }\n      },\n      onError: form => {\n        const values = form.values();\n        console.log('Error', values);\n        this.rootStore.notificationStore.error('Error');\n      }\n    });\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"category\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"getCategory\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async () => {\n      const getCategory = await Axios.get('http://localhost:3001/api/get/category/' + this.categoryId);\n      console.log('Success', getCategory);\n      runInAction(() => {\n        this.category = getCategory;\n      });\n    };\n  }\n})), _class));\nexport default EditCategoryViewStore;","map":{"version":3,"sources":["D:/management-tool/src/client/modules/category/stores/EditCategoryViewStore.js"],"names":["observable","action","runInAction","EditCategoryForm","Axios","EditCategoryViewStore","bound","constructor","rootStore","navigateCreateCategory","routerStore","goTo","categoryId","router","routerState","params","id","form","onInit","getCategory","set","type","category","data","onSuccess","values","console","log","error","invalidate","message","notificationStore","onError","get"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,WAA7B,QAAgD,MAAhD;AACA,SAASC,gBAAT,QAAiC,UAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;IAEMC,qB,WAiCDJ,MAAM,CAACK,K,qBAjCZ,MAAMD,qBAAN,CAA4B;AAGxBE,EAAAA,WAAW,CAACC,SAAD,EAAY;AAAA;;AAAA;;AAAA,SAuCvBC,sBAvCuB,GAuCE,MAAM;AAC3B,WAAKD,SAAL,CAAeE,WAAf,CAA2BC,IAA3B,CAAgC,gBAAhC;AACH,KAzCsB;;AACnB,SAAKH,SAAL,GAAiBA,SAAjB;AACA,SAAKI,UAAL,GAAkB,KAAKJ,SAAL,CAAeE,WAAf,CAA2BG,MAA3B,CAAkCC,WAAlC,CAA8CC,MAA9C,CAAqDC,EAAvE;AACA,SAAKC,IAAL,GAAY,IAAId,gBAAJ,CAAqB;AAC7Be,MAAAA,MAAM,EAAE,YAAY;AAChB,cAAM,KAAKC,WAAL,EAAN;AACA,aAAKF,IAAL,CAAUG,GAAV,CAAc,OAAd,EAAuB;AAAEC,UAAAA,IAAI,EAAE,KAAKC,QAAL,CAAcC,IAAd,CAAmB,CAAnB,EAAsBF;AAA9B,SAAvB;AACH,OAJ4B;AAK7BG,MAAAA,SAAS,EAAE,MAAOP,IAAP,IAAgB;AACvB,cAAMQ,MAAM,GAAGR,IAAI,CAACQ,MAAL,EAAf;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB;;AACA,YAAI,CACA;AACA;AACA;AACA;AACA;AACH,SAND,CAME,OAAOG,KAAP,EAAc;AACZ,eAAKX,IAAL,CAAUY,UAAV,CAAqBD,KAAK,CAACE,OAA3B;AACA,eAAKtB,SAAL,CAAeuB,iBAAf,CAAiCH,KAAjC,CAAuCA,KAAK,CAACE,OAA7C;AACH;AACJ,OAlB4B;AAmB7BE,MAAAA,OAAO,EAAGf,IAAD,IAAU;AACf,cAAMQ,MAAM,GAAGR,IAAI,CAACQ,MAAL,EAAf;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,MAArB;AACA,aAAKjB,SAAL,CAAeuB,iBAAf,CAAiCH,KAAjC,CAAuC,OAAvC;AACH;AAvB4B,KAArB,CAAZ;AAyBH;;AA/BuB,C,kFACvB5B,U;;;;;;;;;;WAiCa,YAAY;AACtB,YAAMmB,WAAW,GAAG,MAAMf,KAAK,CAAC6B,GAAN,CAAU,4CAA4C,KAAKrB,UAA3D,CAA1B;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBR,WAAvB;AACAjB,MAAAA,WAAW,CAAC,MAAM;AACd,aAAKoB,QAAL,GAAgBH,WAAhB;AACH,OAFU,CAAX;AAGH,K;;;AAOL,eAAed,qBAAf","sourcesContent":["import { observable, action, runInAction } from 'mobx';\r\nimport { EditCategoryForm } from '../forms';\r\nimport Axios from 'axios';\r\n\r\nclass EditCategoryViewStore {\r\n    @observable category;\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n        this.categoryId = this.rootStore.routerStore.router.routerState.params.id;\r\n        this.form = new EditCategoryForm({\r\n            onInit: async () => {\r\n                await this.getCategory();\r\n                this.form.set('value', { type: this.category.data[0].type })\r\n            },\r\n            onSuccess: async (form) => {\r\n                const values = form.values();\r\n                console.log('Success', values);\r\n                try {\r\n                    // const editCategory = await Axios.post('http://localhost:3001/api/edit/category/' + this.categoryId, { type: values.type });\r\n                    // console.log('Success', editCategory);\r\n                    // const updateItems = await Axios.post('http://localhost:3001/api/update/items/' + this.categoryId, { type: values.type });\r\n                    // console.log('Success', updateItems);\r\n                    // !editCategory.data.errno && !updateItems.data.errno ? this.rootStore.notificationStore.success('Success') : this.rootStore.notificationStore.error('Error');\r\n                } catch (error) {\r\n                    this.form.invalidate(error.message);\r\n                    this.rootStore.notificationStore.error(error.message);\r\n                }\r\n            },\r\n            onError: (form) => {\r\n                const values = form.values();\r\n                console.log('Error', values);\r\n                this.rootStore.notificationStore.error('Error');\r\n            }\r\n        })\r\n    }\r\n\r\n    @action.bound\r\n    getCategory = async () => {\r\n        const getCategory = await Axios.get('http://localhost:3001/api/get/category/' + this.categoryId);\r\n        console.log('Success', getCategory);\r\n        runInAction(() => {\r\n            this.category = getCategory;\r\n        })\r\n    }\r\n\r\n    navigateCreateCategory = () => {\r\n        this.rootStore.routerStore.goTo('createCategory');\r\n    }\r\n}\r\n\r\nexport default EditCategoryViewStore;"]},"metadata":{},"sourceType":"module"}