{"ast":null,"code":"import _initializerDefineProperty from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _temp;\n\nimport { observable, action, runInAction } from 'mobx';\nimport Axios from 'axios';\nlet ItemHistoryViewStore = (_class = (_temp = class ItemHistoryViewStore {\n  constructor(rootStore) {\n    _initializerDefineProperty(this, \"logs\", _descriptor, this);\n\n    this.navigateVirtualWarehouse = () => {\n      this.rootStore.routerStore.goTo('virtualWarehouse');\n    };\n\n    this.rootStore = rootStore;\n    this.itemId = this.rootStore.routerStore.router.routerState.params.id;\n\n    (async function () {\n      debugger;\n      const getLogs = await Axios.get('http://localhost:3001/api/get/logs/' + this.itemId);\n      console.log('Success', getLogs);\n      runInAction(() => {\n        this.logs = getLogs;\n      });\n    })();\n  } // @action.bound\n  // getLogs = async () => {\n  //     const getLogs = await Axios.get('http://localhost:3001/api/get/logs/' + this.itemId);\n  //     console.log('Success', getLogs);\n  //     runInAction(() => {\n  //         this.logs = getLogs;\n  //     })\n  // }\n\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"logs\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class);\nexport default ItemHistoryViewStore;","map":{"version":3,"sources":["D:/management-tool/src/client/modules/item/stores/ItemHistoryViewStore.js"],"names":["observable","action","runInAction","Axios","ItemHistoryViewStore","constructor","rootStore","navigateVirtualWarehouse","routerStore","goTo","itemId","router","routerState","params","id","getLogs","get","console","log","logs"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,WAA7B,QAAgD,MAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;IAEMC,oB,sBAAN,MAAMA,oBAAN,CAA2B;AAIvBC,EAAAA,WAAW,CAACC,SAAD,EAAY;AAAA;;AAAA,SAsBvBC,wBAtBuB,GAsBI,MAAM;AAC7B,WAAKD,SAAL,CAAeE,WAAf,CAA2BC,IAA3B,CAAgC,kBAAhC;AACH,KAxBsB;;AACnB,SAAKH,SAAL,GAAiBA,SAAjB;AACA,SAAKI,MAAL,GAAc,KAAKJ,SAAL,CAAeE,WAAf,CAA2BG,MAA3B,CAAkCC,WAAlC,CAA8CC,MAA9C,CAAqDC,EAAnE;;AACA,KAAC,kBAAkB;AACf;AACA,YAAMC,OAAO,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,wCAAwC,KAAKN,MAAvD,CAAtB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,OAAvB;AACAb,MAAAA,WAAW,CAAC,MAAM;AACd,aAAKiB,IAAL,GAAYJ,OAAZ;AACH,OAFU,CAAX;AAGH,KAPD;AAQH,GAfsB,CAiBvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAxBuB,C,8EACtBf,U;;;;;;AA8BL,eAAeI,oBAAf","sourcesContent":["import { observable, action, runInAction } from 'mobx';\r\nimport Axios from 'axios';\r\n\r\nclass ItemHistoryViewStore {\r\n    @observable\r\n    logs;\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n        this.itemId = this.rootStore.routerStore.router.routerState.params.id;\r\n        (async function () {\r\n            debugger\r\n            const getLogs = await Axios.get('http://localhost:3001/api/get/logs/' + this.itemId);\r\n            console.log('Success', getLogs);\r\n            runInAction(() => {\r\n                this.logs = getLogs;\r\n            })\r\n        })();\r\n    }\r\n\r\n    // @action.bound\r\n    // getLogs = async () => {\r\n    //     const getLogs = await Axios.get('http://localhost:3001/api/get/logs/' + this.itemId);\r\n    //     console.log('Success', getLogs);\r\n    //     runInAction(() => {\r\n    //         this.logs = getLogs;\r\n    //     })\r\n    // }\r\n\r\n    navigateVirtualWarehouse = () => {\r\n        this.rootStore.routerStore.goTo('virtualWarehouse');\r\n    }\r\n}\r\n\r\nexport default ItemHistoryViewStore;"]},"metadata":{},"sourceType":"module"}