{"ast":null,"code":"import _initializerDefineProperty from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _dec2, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _temp;\n\nimport { observable, action, runInAction, computed } from 'mobx';\nimport Axios from 'axios';\nlet AuthStore = (_dec = action.bound, _dec2 = action.bound, (_class = (_temp = class AuthStore {\n  constructor(rootStore) {\n    _initializerDefineProperty(this, \"isLoggedIn\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"loggedInUser\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"logIn\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"logOut\", _descriptor4, this);\n\n    this.rootStore = rootStore;\n  }\n\n  get checkUser() {\n    console.log(this.isLoggedIn, this.loggedInUser);\n    return true;\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"isLoggedIn\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"loggedInUser\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"checkUser\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"checkUser\"), _class.prototype), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"logIn\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async credentials => {\n      try {\n        const users = await Axios.get('http://localhost:3001/api/get/users');\n        const user = users.data.filter(u => u.email == credentials.email && u.password == credentials.password);\n\n        if (user.length) {\n          runInAction(() => {\n            debugger;\n            this.isLoggedIn = true;\n            this.loggedInUser = user[0];\n          });\n        }\n\n        debugger;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    };\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"logOut\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async () => {\n      debugger;\n      this.isLoggedIn = false;\n      this.loggedInUser = null;\n    };\n  }\n})), _class));\nexport default AuthStore;","map":{"version":3,"sources":["D:/management-tool/src/client/common/stores/AuthStore.js"],"names":["observable","action","runInAction","computed","Axios","AuthStore","bound","constructor","rootStore","checkUser","console","log","isLoggedIn","loggedInUser","credentials","users","get","user","data","filter","u","email","password","length","error"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,WAA7B,EAA0CC,QAA1C,QAA0D,MAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;IAEMC,S,WAgBDJ,MAAM,CAACK,K,UAoBPL,MAAM,CAACK,K,qBApCZ,MAAMD,SAAN,CAAgB;AAMZE,EAAAA,WAAW,CAACC,SAAD,EAAY;AAAA;;AAAA;;AAAA;;AAAA;;AACnB,SAAKA,SAAL,GAAiBA,SAAjB;AACH;;AAED,MACIC,SADJ,GACgB;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,UAAjB,EAA6B,KAAKC,YAAlC;AACA,WAAO,IAAP;AACH;;AAdW,C,oFACXb,U;;;;;WACY,K;;gFACZA,U;;;;;WACc,I;;8DAMdG,Q;;;;;WAOO,MAAOW,WAAP,IAAuB;AAC3B,UAAI;AACA,cAAMC,KAAK,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,qCAAV,CAApB;AACA,cAAMC,IAAI,GAAGF,KAAK,CAACG,IAAN,CAAWC,MAAX,CAAkBC,CAAC,IAAIA,CAAC,CAACC,KAAF,IAAWP,WAAW,CAACO,KAAvB,IAAgCD,CAAC,CAACE,QAAF,IAAcR,WAAW,CAACQ,QAAjF,CAAb;;AACA,YAAGL,IAAI,CAACM,MAAR,EAAgB;AACZrB,UAAAA,WAAW,CAAC,MAAM;AACd;AACA,iBAAKU,UAAL,GAAkB,IAAlB;AACA,iBAAKC,YAAL,GAAoBI,IAAI,CAAC,CAAD,CAAxB;AACH,WAJU,CAAX;AAKH;;AACD;AACH,OAXD,CAYA,OAAOO,KAAP,EAAc;AACVd,QAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACA,cAAMA,KAAN;AACH;AACJ,K;;;;;;;WAGQ,YAAW;AAChB;AACA,WAAKZ,UAAL,GAAkB,KAAlB;AACA,WAAKC,YAAL,GAAoB,IAApB;AACH,K;;;AAGL,eAAeR,SAAf","sourcesContent":["import { observable, action, runInAction, computed } from 'mobx';\r\nimport Axios from 'axios';\r\n\r\nclass AuthStore {\r\n    @observable\r\n    isLoggedIn = false;\r\n    @observable\r\n    loggedInUser = null;\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n    }\r\n\r\n    @computed\r\n    get checkUser() {\r\n        console.log(this.isLoggedIn, this.loggedInUser);\r\n        return true\r\n    }\r\n\r\n    @action.bound\r\n    logIn = async (credentials) => {\r\n        try {\r\n            const users = await Axios.get('http://localhost:3001/api/get/users');\r\n            const user = users.data.filter(u => u.email == credentials.email && u.password == credentials.password);\r\n            if(user.length) {\r\n                runInAction(() => {\r\n                    debugger\r\n                    this.isLoggedIn = true;\r\n                    this.loggedInUser = user[0];\r\n                })\r\n            }\r\n            debugger\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    @action.bound\r\n    logOut = async() => {\r\n        debugger\r\n        this.isLoggedIn = false;\r\n        this.loggedInUser = null;\r\n    }\r\n}\r\n\r\nexport default AuthStore;"]},"metadata":{},"sourceType":"module"}