{"ast":null,"code":"import _initializerDefineProperty from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _class, _descriptor, _descriptor2, _temp;\n\nimport { action, observable, runInAction } from \"mobx\";\nimport { AddItemForm } from '../forms';\nimport Axios from \"axios\";\nlet AddItemViewStore = (_dec = action.bound, (_class = (_temp = class AddItemViewStore {\n  constructor(rootStore) {\n    _initializerDefineProperty(this, \"categories\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"getCategories\", _descriptor2, this);\n\n    this.navigateDashboard = () => {\n      this.rootStore.routerStore.goTo('dashboard');\n    };\n\n    this.rootStore = rootStore;\n    this.form = new AddItemForm({\n      onSuccess: async form => {\n        const values = form.values();\n\n        try {\n          const user = await Axios.post('http://localhost:3001/api/create/item', {\n            name: values.name,\n            companyId: values.companyId\n          });\n        } catch (error) {\n          debugger;\n        }\n      },\n      onError: form => {\n        debugger;\n      }\n    });\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"categories\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"getCategories\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async () => {\n      const categories = await Axios.get('http://localhost:3001/api/get/categories');\n      runInAction(() => {\n        this.categories = categories;\n      });\n    };\n  }\n})), _class));\nexport default AddItemViewStore;","map":{"version":3,"sources":["D:/management-tool/src/client/modules/item/stores/AddItemViewStore.js"],"names":["action","observable","runInAction","AddItemForm","Axios","AddItemViewStore","bound","constructor","rootStore","navigateDashboard","routerStore","goTo","form","onSuccess","values","user","post","name","companyId","error","onError","categories","get"],"mappings":";;;;;;AAAA,SAASA,MAAT,EAAiBC,UAAjB,EAA6BC,WAA7B,QAAgD,MAAhD;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;IAEMC,gB,WAoBDL,MAAM,CAACM,K,qBApBZ,MAAMD,gBAAN,CAAuB;AAGnBE,EAAAA,WAAW,CAACC,SAAD,EAAY;AAAA;;AAAA;;AAAA,SAyBvBC,iBAzBuB,GAyBH,MAAM;AACtB,WAAKD,SAAL,CAAeE,WAAf,CAA2BC,IAA3B,CAAgC,WAAhC;AACH,KA3BsB;;AACnB,SAAKH,SAAL,GAAiBA,SAAjB;AACA,SAAKI,IAAL,GAAY,IAAIT,WAAJ,CAAgB;AACxBU,MAAAA,SAAS,EAAE,MAAOD,IAAP,IAAgB;AACvB,cAAME,MAAM,GAAGF,IAAI,CAACE,MAAL,EAAf;;AACA,YAAI;AACA,gBAAMC,IAAI,GAAG,MAAMX,KAAK,CAACY,IAAN,CAAW,uCAAX,EAAoD;AAAEC,YAAAA,IAAI,EAAEH,MAAM,CAACG,IAAf;AAAqBC,YAAAA,SAAS,EAAEJ,MAAM,CAACI;AAAvC,WAApD,CAAnB;AACH,SAFD,CAEE,OAAOC,KAAP,EAAc;AACZ;AACH;AACJ,OARuB;AASxBC,MAAAA,OAAO,EAAGR,IAAD,IAAU;AACf;AACH;AAXuB,KAAhB,CAAZ;AAaH;;AAlBkB,C,oFAClBX,U;;;;;;;;;;WAoBe,YAAY;AACxB,YAAMoB,UAAU,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAU,0CAAV,CAAzB;AACApB,MAAAA,WAAW,CAAC,MAAM;AACd,aAAKmB,UAAL,GAAkBA,UAAlB;AACH,OAFU,CAAX;AAGH,K;;;AAOL,eAAehB,gBAAf","sourcesContent":["import { action, observable, runInAction } from \"mobx\";\r\nimport { AddItemForm } from '../forms'\r\nimport Axios from \"axios\";\r\n\r\nclass AddItemViewStore {\r\n    @observable\r\n    categories;\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n        this.form = new AddItemForm({\r\n            onSuccess: async (form) => {\r\n                const values = form.values();\r\n                try {\r\n                    const user = await Axios.post('http://localhost:3001/api/create/item', { name: values.name, companyId: values.companyId });\r\n                } catch (error) {\r\n                    debugger\r\n                }\r\n            },\r\n            onError: (form) => {\r\n                debugger\r\n            }\r\n        })\r\n    }\r\n\r\n    @action.bound\r\n    getCategories = async () => {\r\n        const categories = await Axios.get('http://localhost:3001/api/get/categories');\r\n        runInAction(() => {\r\n            this.categories = categories;\r\n        })\r\n    }\r\n\r\n    navigateDashboard = () => {\r\n        this.rootStore.routerStore.goTo('dashboard');\r\n    }\r\n}\r\n\r\nexport default AddItemViewStore;"]},"metadata":{},"sourceType":"module"}