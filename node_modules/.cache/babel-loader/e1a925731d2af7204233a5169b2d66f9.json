{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _each2 = require('lodash/each');\n\nvar _each3 = _interopRequireDefault(_each2);\n\nvar _merge3 = require('lodash/merge');\n\nvar _merge4 = _interopRequireDefault(_merge3);\n\nvar _mobx = require('mobx');\n\nvar _utils = require('../utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _parser = require('../parser');\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n  Field Events\n*/\n\n\nexports.default = {\n  /**\n   MobX Event (observe/intercept)\n   */\n  MOBXEvent: function MOBXEvent(_ref) {\n    var _this = this;\n\n    var _ref$path = _ref.path,\n        path = _ref$path === undefined ? null : _ref$path,\n        _ref$key = _ref.key,\n        key = _ref$key === undefined ? 'value' : _ref$key,\n        call = _ref.call,\n        type = _ref.type;\n    var $instance = this.select(path || this.path, null, null) || this;\n\n    var $call = function $call(change) {\n      return call.apply(null, [{\n        change: change,\n        form: _this.state.form,\n        path: $instance.path || null,\n        field: $instance.path ? $instance : null\n      }]);\n    };\n\n    var fn = void 0;\n    var ffn = void 0;\n\n    if (type === 'observer') {\n      fn = _mobx.observe;\n      ffn = $instance.fields.observe;\n    }\n\n    if (type === 'interceptor') {\n      // eslint-disable-next-line\n      key = '$' + key;\n      fn = _mobx.intercept;\n      ffn = $instance.fields.intercept;\n    }\n\n    var $dkey = $instance.path ? key + '@' + $instance.path : key;\n    (0, _merge4.default)(this.state.disposers[type], _defineProperty({}, $dkey, key === 'fields' ? ffn.apply(function (change) {\n      return $call(change);\n    }) : fn($instance, key, function (change) {\n      return $call(change);\n    })));\n  },\n\n  /**\n   Dispose MOBX Events\n   */\n  dispose: function dispose() {\n    var opt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    if (this.path && opt) return this.disposeSingle(opt);\n    return this.disposeAll(opt);\n  },\n\n  /**\n   Dispose All Events (observe/intercept)\n   */\n  disposeAll: function disposeAll() {\n    var dispose = function dispose(disposer) {\n      return disposer.apply();\n    };\n\n    (0, _each3.default)(this.state.disposers.interceptor, dispose);\n    (0, _each3.default)(this.state.disposers.observer, dispose);\n    this.state.disposers = {\n      interceptor: {},\n      observer: {}\n    };\n    return null;\n  },\n\n  /**\n   Dispose Single Event (observe/intercept)\n   */\n  disposeSingle: function disposeSingle(_ref2) {\n    var type = _ref2.type,\n        _ref2$key = _ref2.key,\n        key = _ref2$key === undefined ? 'value' : _ref2$key,\n        _ref2$path = _ref2.path,\n        path = _ref2$path === undefined ? null : _ref2$path;\n\n    var $path = _parser2.default.parsePath(_utils2.default.$try(path, this.path)); // eslint-disable-next-line\n\n\n    if (type === 'interceptor') key = '$' + key; // target observables\n\n    this.state.disposers[type][key + '@' + $path].apply();\n    delete this.state.disposers[type][key + '@' + $path];\n  }\n};\nmodule.exports = exports['default'];","map":{"version":3,"sources":["D:/management-tool/node_modules/mobx-react-form/lib/shared/Events.js"],"names":["Object","defineProperty","exports","value","_each2","require","_each3","_interopRequireDefault","_merge3","_merge4","_mobx","_utils","_utils2","_parser","_parser2","obj","__esModule","default","_defineProperty","key","enumerable","configurable","writable","MOBXEvent","_ref","_this","_ref$path","path","undefined","_ref$key","call","type","$instance","select","$call","change","apply","form","state","field","fn","ffn","observe","fields","intercept","$dkey","disposers","dispose","opt","arguments","length","disposeSingle","disposeAll","disposer","interceptor","observer","_ref2","_ref2$key","_ref2$path","$path","parsePath","$try","module"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _each2 = require('lodash/each');\n\nvar _each3 = _interopRequireDefault(_each2);\n\nvar _merge3 = require('lodash/merge');\n\nvar _merge4 = _interopRequireDefault(_merge3);\n\nvar _mobx = require('mobx');\n\nvar _utils = require('../utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _parser = require('../parser');\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n  Field Events\n*/\nexports.default = {\n\n  /**\n   MobX Event (observe/intercept)\n   */\n  MOBXEvent: function MOBXEvent(_ref) {\n    var _this = this;\n\n    var _ref$path = _ref.path,\n        path = _ref$path === undefined ? null : _ref$path,\n        _ref$key = _ref.key,\n        key = _ref$key === undefined ? 'value' : _ref$key,\n        call = _ref.call,\n        type = _ref.type;\n\n    var $instance = this.select(path || this.path, null, null) || this;\n\n    var $call = function $call(change) {\n      return call.apply(null, [{\n        change: change,\n        form: _this.state.form,\n        path: $instance.path || null,\n        field: $instance.path ? $instance : null\n      }]);\n    };\n\n    var fn = void 0;\n    var ffn = void 0;\n\n    if (type === 'observer') {\n      fn = _mobx.observe;\n      ffn = $instance.fields.observe;\n    }\n\n    if (type === 'interceptor') {\n      // eslint-disable-next-line\n      key = '$' + key;\n      fn = _mobx.intercept;\n      ffn = $instance.fields.intercept;\n    }\n\n    var $dkey = $instance.path ? key + '@' + $instance.path : key;\n\n    (0, _merge4.default)(this.state.disposers[type], _defineProperty({}, $dkey, key === 'fields' ? ffn.apply(function (change) {\n      return $call(change);\n    }) : fn($instance, key, function (change) {\n      return $call(change);\n    })));\n  },\n\n\n  /**\n   Dispose MOBX Events\n   */\n  dispose: function dispose() {\n    var opt = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    if (this.path && opt) return this.disposeSingle(opt);\n    return this.disposeAll(opt);\n  },\n\n\n  /**\n   Dispose All Events (observe/intercept)\n   */\n  disposeAll: function disposeAll() {\n    var dispose = function dispose(disposer) {\n      return disposer.apply();\n    };\n    (0, _each3.default)(this.state.disposers.interceptor, dispose);\n    (0, _each3.default)(this.state.disposers.observer, dispose);\n    this.state.disposers = { interceptor: {}, observer: {} };\n    return null;\n  },\n\n\n  /**\n   Dispose Single Event (observe/intercept)\n   */\n  disposeSingle: function disposeSingle(_ref2) {\n    var type = _ref2.type,\n        _ref2$key = _ref2.key,\n        key = _ref2$key === undefined ? 'value' : _ref2$key,\n        _ref2$path = _ref2.path,\n        path = _ref2$path === undefined ? null : _ref2$path;\n\n    var $path = _parser2.default.parsePath(_utils2.default.$try(path, this.path));\n    // eslint-disable-next-line\n    if (type === 'interceptor') key = '$' + key; // target observables\n    this.state.disposers[type][key + '@' + $path].apply();\n    delete this.state.disposers[type][key + '@' + $path];\n  }\n};\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}