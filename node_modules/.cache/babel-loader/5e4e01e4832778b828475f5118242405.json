{"ast":null,"code":"import _applyDecoratedDescriptor from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\n\nvar _class, _temp;\n\nimport { computed } from 'mobx';\nimport { MyProfileForm } from '../forms';\nlet MyProfileViewStore = (_class = (_temp = class MyProfileViewStore {\n  get isOwner() {\n    if (this.rootStore.authStore.loggedInUser.hasOwnProperty('name')) {\n      return true;\n    }\n\n    return false;\n  }\n\n  constructor(rootStore) {\n    this.navigateDashboard = () => {\n      this.rootStore.routerStore.goTo('dashboard');\n    };\n\n    this.rootStore = rootStore;\n    const {\n      loggedInUser\n    } = this.rootStore.authStore;\n    this.form = new MyProfileForm();\n\n    if (this.rootStore.authStore.loggedInUser.hasOwnProperty('name')) {\n      this.form.set('value', {\n        id: loggedInUser.id,\n        email: loggedInUser.email,\n        password: loggedInUser.password,\n        name: loggedInUser.name,\n        address: loggedInUser.address,\n        city: loggedInUser.city\n      });\n    } else {\n      this.form.set('value', {\n        id: loggedInUser.id,\n        email: loggedInUser.email,\n        password: loggedInUser.password,\n        companyId: loggedInUser.companyId\n      });\n    }\n\n    this.form.disabled(true);\n    debugger;\n  }\n\n}, _temp), (_applyDecoratedDescriptor(_class.prototype, \"isOwner\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isOwner\"), _class.prototype)), _class);\nexport default MyProfileViewStore;","map":{"version":3,"sources":["D:/management-tool/src/client/modules/profile/stores/MyProfileViewStore.js"],"names":["computed","MyProfileForm","MyProfileViewStore","isOwner","rootStore","authStore","loggedInUser","hasOwnProperty","constructor","navigateDashboard","routerStore","goTo","form","set","id","email","password","name","address","city","companyId","disabled"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,MAAzB;AACA,SAASC,aAAT,QAA8B,UAA9B;IAEMC,kB,sBAAN,MAAMA,kBAAN,CAAyB;AACrB,MACIC,OADJ,GACc;AACV,QAAI,KAAKC,SAAL,CAAeC,SAAf,CAAyBC,YAAzB,CAAsCC,cAAtC,CAAqD,MAArD,CAAJ,EAAkE;AAC9D,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH;;AAEDC,EAAAA,WAAW,CAACJ,SAAD,EAAY;AAAA,SAcvBK,iBAduB,GAcH,MAAM;AACtB,WAAKL,SAAL,CAAeM,WAAf,CAA2BC,IAA3B,CAAgC,WAAhC;AACH,KAhBsB;;AACnB,SAAKP,SAAL,GAAiBA,SAAjB;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAmB,KAAKF,SAAL,CAAeC,SAAxC;AACA,SAAKO,IAAL,GAAY,IAAIX,aAAJ,EAAZ;;AACA,QAAI,KAAKG,SAAL,CAAeC,SAAf,CAAyBC,YAAzB,CAAsCC,cAAtC,CAAqD,MAArD,CAAJ,EAAkE;AAC9D,WAAKK,IAAL,CAAUC,GAAV,CAAc,OAAd,EAAuB;AAAEC,QAAAA,EAAE,EAAER,YAAY,CAACQ,EAAnB;AAAuBC,QAAAA,KAAK,EAAET,YAAY,CAACS,KAA3C;AAAkDC,QAAAA,QAAQ,EAAEV,YAAY,CAACU,QAAzE;AAAmFC,QAAAA,IAAI,EAAEX,YAAY,CAACW,IAAtG;AAA4GC,QAAAA,OAAO,EAAEZ,YAAY,CAACY,OAAlI;AAA2IC,QAAAA,IAAI,EAAEb,YAAY,CAACa;AAA9J,OAAvB;AACH,KAFD,MAGK;AACD,WAAKP,IAAL,CAAUC,GAAV,CAAc,OAAd,EAAuB;AAAEC,QAAAA,EAAE,EAAER,YAAY,CAACQ,EAAnB;AAAuBC,QAAAA,KAAK,EAAET,YAAY,CAACS,KAA3C;AAAkDC,QAAAA,QAAQ,EAAEV,YAAY,CAACU,QAAzE;AAAmFI,QAAAA,SAAS,EAAEd,YAAY,CAACc;AAA3G,OAAvB;AACH;;AACD,SAAKR,IAAL,CAAUS,QAAV,CAAmB,IAAnB;AACA;AACH;;AArBoB,C,mEACpBrB,Q;AA2BL,eAAeE,kBAAf","sourcesContent":["import { computed } from 'mobx';\r\nimport { MyProfileForm } from '../forms';\r\n\r\nclass MyProfileViewStore {\r\n    @computed\r\n    get isOwner() {\r\n        if (this.rootStore.authStore.loggedInUser.hasOwnProperty('name')) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n        const { loggedInUser } = this.rootStore.authStore;\r\n        this.form = new MyProfileForm();\r\n        if (this.rootStore.authStore.loggedInUser.hasOwnProperty('name')) {\r\n            this.form.set('value', { id: loggedInUser.id, email: loggedInUser.email, password: loggedInUser.password, name: loggedInUser.name, address: loggedInUser.address, city: loggedInUser.city });\r\n        }\r\n        else {\r\n            this.form.set('value', { id: loggedInUser.id, email: loggedInUser.email, password: loggedInUser.password, companyId: loggedInUser.companyId });\r\n        }\r\n        this.form.disabled(true);\r\n        debugger\r\n    }\r\n\r\n    navigateDashboard = () => {\r\n        this.rootStore.routerStore.goTo('dashboard');\r\n    }\r\n}\r\n\r\nexport default MyProfileViewStore;"]},"metadata":{},"sourceType":"module"}