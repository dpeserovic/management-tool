{"ast":null,"code":"import _initializerDefineProperty from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _dec2, _dec3, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _temp;\n\nimport { observable, action, runInAction } from 'mobx';\nimport Axios from 'axios';\nlet SupervisionViewStore = (_dec = action.bound, _dec2 = action.bound, _dec3 = action.bound, (_class = (_temp = class SupervisionViewStore {\n  constructor(rootStore) {\n    _initializerDefineProperty(this, \"categories\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"items\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"users\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"getCategories\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"getItems\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"getUsers\", _descriptor6, this);\n\n    this.navigateDashboard = () => {\n      this.rootStore.routerStore.goTo('dashboard');\n    };\n\n    this.rootStore = rootStore;\n    this.companyId = this.rootStore.authStore.loggedInUser.id;\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"categories\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"items\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"users\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"getCategories\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async () => {\n      const getCategories = await Axios.get('http://localhost:3001/api/get/categories/' + this.companyId);\n      console.log('Success', getCategories);\n      runInAction(() => {\n        this.categories = getCategories;\n      });\n    };\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"getItems\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async () => {\n      const getItems = await Axios.get('http://localhost:3001/api/get/all-taken-items/' + this.companyId);\n      console.log('Success', getItems);\n      getItems.data = getItems.data.map(i => {\n        this.categories.data.filter(c => c.id === i.categoryId ? i.type = c.type : null);\n        return i;\n      });\n      runInAction(() => {\n        this.items = getItems;\n      });\n    };\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"getUsers\", [_dec3], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async () => {\n      const getUsers = await Axios.get('http://localhost:3001/api/get/users/' + this.companyId);\n      console.log('Success', getUsers);\n      debugger;\n      getUsers.data = getUsers.data.map(u => {\n        u[u.id] = [];\n        this.items.data.filter(i => {\n          if (u.id == i.userId) {\n            u[u.id].push(i.name);\n          }\n        });\n        return u;\n      });\n      debugger; // getUsers.data = getUsers.data.map(u => {\n      //     this.items.data.filter(i => {\n      //         if (u.id == i.userId) {\n      //             u[u.id].push(i.name);\n      //         }\n      //     })\n      //     return u;\n      // })\n      // debugger\n\n      runInAction(() => {\n        this.users = getUsers;\n      });\n    };\n  }\n})), _class));\nexport default SupervisionViewStore;","map":{"version":3,"sources":["D:/management-tool/src/client/modules/supervision/stores/SupervisionViewStore.js"],"names":["observable","action","runInAction","Axios","SupervisionViewStore","bound","constructor","rootStore","navigateDashboard","routerStore","goTo","companyId","authStore","loggedInUser","id","getCategories","get","console","log","categories","getItems","data","map","i","filter","c","categoryId","type","items","getUsers","u","userId","push","name","users"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,WAA7B,QAAgD,MAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;IAEMC,oB,WAUDH,MAAM,CAACI,K,UASPJ,MAAM,CAACI,K,UAaPJ,MAAM,CAACI,K,qBAhCZ,MAAMD,oBAAN,CAA2B;AAKvBE,EAAAA,WAAW,CAACC,SAAD,EAAY;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,SAwDvBC,iBAxDuB,GAwDH,MAAM;AACtB,WAAKD,SAAL,CAAeE,WAAf,CAA2BC,IAA3B,CAAgC,WAAhC;AACH,KA1DsB;;AACnB,SAAKH,SAAL,GAAiBA,SAAjB;AACA,SAAKI,SAAL,GAAiB,KAAKJ,SAAL,CAAeK,SAAf,CAAyBC,YAAzB,CAAsCC,EAAvD;AACH;;AARsB,C,oFACtBd,U;;;;;yEACAA,U;;;;;yEACAA,U;;;;;;;;;;WAQe,YAAY;AACxB,YAAMe,aAAa,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,8CAA8C,KAAKL,SAA7D,CAA5B;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,aAAvB;AACAb,MAAAA,WAAW,CAAC,MAAM;AACd,aAAKiB,UAAL,GAAkBJ,aAAlB;AACH,OAFU,CAAX;AAGH,K;;;;;;;WAGU,YAAY;AACnB,YAAMK,QAAQ,GAAG,MAAMjB,KAAK,CAACa,GAAN,CAAU,mDAAmD,KAAKL,SAAlE,CAAvB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,QAAvB;AACAA,MAAAA,QAAQ,CAACC,IAAT,GAAgBD,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBC,CAAC,IAAI;AACnC,aAAKJ,UAAL,CAAgBE,IAAhB,CAAqBG,MAArB,CAA4BC,CAAC,IAAIA,CAAC,CAACX,EAAF,KAASS,CAAC,CAACG,UAAX,GAAwBH,CAAC,CAACI,IAAF,GAASF,CAAC,CAACE,IAAnC,GAA0C,IAA3E;AACA,eAAOJ,CAAP;AACH,OAHe,CAAhB;AAIArB,MAAAA,WAAW,CAAC,MAAM;AACd,aAAK0B,KAAL,GAAaR,QAAb;AACH,OAFU,CAAX;AAGH,K;;;;;;;WAGU,YAAY;AACnB,YAAMS,QAAQ,GAAG,MAAM1B,KAAK,CAACa,GAAN,CAAU,yCAAyC,KAAKL,SAAxD,CAAvB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBW,QAAvB;AACA;AACAA,MAAAA,QAAQ,CAACR,IAAT,GAAgBQ,QAAQ,CAACR,IAAT,CAAcC,GAAd,CAAkBQ,CAAC,IAAI;AACnCA,QAAAA,CAAC,CAACA,CAAC,CAAChB,EAAH,CAAD,GAAU,EAAV;AACA,aAAKc,KAAL,CAAWP,IAAX,CAAgBG,MAAhB,CAAuBD,CAAC,IAAI;AACxB,cAAIO,CAAC,CAAChB,EAAF,IAAQS,CAAC,CAACQ,MAAd,EAAsB;AAClBD,YAAAA,CAAC,CAACA,CAAC,CAAChB,EAAH,CAAD,CAAQkB,IAAR,CAAaT,CAAC,CAACU,IAAf;AACH;AACJ,SAJD;AAKA,eAAOH,CAAP;AACH,OARe,CAAhB;AASA,eAbmB,CAcnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA5B,MAAAA,WAAW,CAAC,MAAM;AACd,aAAKgC,KAAL,GAAaL,QAAb;AACH,OAFU,CAAX;AAGH,K;;;AAOL,eAAezB,oBAAf","sourcesContent":["import { observable, action, runInAction } from 'mobx';\r\nimport Axios from 'axios';\r\n\r\nclass SupervisionViewStore {\r\n    @observable categories;\r\n    @observable items;\r\n    @observable users;\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n        this.companyId = this.rootStore.authStore.loggedInUser.id;\r\n    }\r\n\r\n    @action.bound\r\n    getCategories = async () => {\r\n        const getCategories = await Axios.get('http://localhost:3001/api/get/categories/' + this.companyId);\r\n        console.log('Success', getCategories);\r\n        runInAction(() => {\r\n            this.categories = getCategories;\r\n        })\r\n    }\r\n\r\n    @action.bound\r\n    getItems = async () => {\r\n        const getItems = await Axios.get('http://localhost:3001/api/get/all-taken-items/' + this.companyId);\r\n        console.log('Success', getItems);\r\n        getItems.data = getItems.data.map(i => {\r\n            this.categories.data.filter(c => c.id === i.categoryId ? i.type = c.type : null);\r\n            return i;\r\n        })\r\n        runInAction(() => {\r\n            this.items = getItems;\r\n        })\r\n    }\r\n\r\n    @action.bound\r\n    getUsers = async () => {\r\n        const getUsers = await Axios.get('http://localhost:3001/api/get/users/' + this.companyId);\r\n        console.log('Success', getUsers);\r\n        debugger\r\n        getUsers.data = getUsers.data.map(u => {\r\n            u[u.id] = [];\r\n            this.items.data.filter(i => {\r\n                if (u.id == i.userId) {\r\n                    u[u.id].push(i.name);\r\n                }\r\n            })\r\n            return u;\r\n        });\r\n        debugger\r\n        // getUsers.data = getUsers.data.map(u => {\r\n        //     this.items.data.filter(i => {\r\n        //         if (u.id == i.userId) {\r\n        //             u[u.id].push(i.name);\r\n        //         }\r\n        //     })\r\n        //     return u;\r\n        // })\r\n        // debugger\r\n        runInAction(() => {\r\n            this.users = getUsers;\r\n        })\r\n    }\r\n\r\n    navigateDashboard = () => {\r\n        this.rootStore.routerStore.goTo('dashboard');\r\n    }\r\n}\r\n\r\nexport default SupervisionViewStore;"]},"metadata":{},"sourceType":"module"}