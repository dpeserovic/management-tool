{"ast":null,"code":"import _initializerDefineProperty from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _dec2, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _temp;\n\nimport { observable, action, runInAction, computed } from 'mobx';\nimport Axios from 'axios';\nlet VirtualWarehouseViewStore = (_dec = action.bound, _dec2 = action.bound, (_class = (_temp = class VirtualWarehouseViewStore {\n  get isOwner() {\n    if (this.rootStore.authStore.loggedInUser.hasOwnProperty('name')) {\n      return true;\n    }\n\n    return false;\n  }\n\n  constructor(rootStore) {\n    _initializerDefineProperty(this, \"categories\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"items\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"getCategories\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"getItems\", _descriptor4, this);\n\n    this.navigateDashboard = () => {\n      this.rootStore.routerStore.goTo('dashboard');\n    };\n\n    this.rootStore = rootStore;\n    this.companyId = this.rootStore.authStore.loggedInUser.hasOwnProperty('name') ? this.rootStore.authStore.loggedInUser.id : this.rootStore.authStore.loggedInUser.companyId;\n    this.userId = !this.rootStore.authStore.loggedInUser.hasOwnProperty('name') ? this.rootStore.authStore.loggedInUser.id : null;\n    this.actions = {\n      navigateEditItem: id => {\n        this.rootStore.routerStore.goTo('editItem', {\n          id: id\n        });\n      },\n      navigateItemLogs: id => {\n        debugger;\n        this.rootStore.routerStore.goTo('itemLogs', {\n          id: id\n        });\n      },\n      deleteItem: async id => {\n        const deleteItem = await Axios.get('http://localhost:3001/api/delete/item/' + id);\n        console.log('Success', deleteItem);\n\n        if (!deleteItem.data.errno) {\n          this.rootStore.notificationStore.success('Success');\n          await this.getItems();\n        } else {\n          this.rootStore.notificationStore.error('Error');\n        }\n      },\n      borrowItem: async id => {\n        const borrowItem = await Axios.post('http://localhost:3001/api/borrow/item/' + id + '/' + this.userId, {\n          dateFrom: Date.now()\n        });\n        console.log('Success', borrowItem);\n\n        if (!borrowItem.data.errno) {\n          this.rootStore.notificationStore.success('Success');\n          await this.getItems();\n        } else {\n          this.rootStore.notificationStore.error('Error');\n        }\n      }\n    };\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"categories\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"items\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _applyDecoratedDescriptor(_class.prototype, \"isOwner\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isOwner\"), _class.prototype), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"getCategories\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async () => {\n      const getCategories = await Axios.get('http://localhost:3001/api/get/categories/' + this.companyId);\n      console.log('Success', getCategories);\n      runInAction(() => {\n        this.categories = getCategories;\n      });\n    };\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"getItems\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async () => {\n      const getItems = await Axios.get('http://localhost:3001/api/get/items/' + this.companyId);\n      console.log('Success', getItems);\n      getItems.data = getItems.data.map(i => {\n        this.categories.data.filter(c => c.id === i.categoryId ? i.type = c.type : null);\n        return i;\n      });\n      runInAction(() => {\n        this.items = getItems;\n      });\n    };\n  }\n})), _class));\nexport default VirtualWarehouseViewStore;","map":{"version":3,"sources":["D:/management-tool/src/client/modules/warehouse/stores/VirtualWarehouseViewStore.js"],"names":["observable","action","runInAction","computed","Axios","VirtualWarehouseViewStore","bound","isOwner","rootStore","authStore","loggedInUser","hasOwnProperty","constructor","navigateDashboard","routerStore","goTo","companyId","id","userId","actions","navigateEditItem","navigateItemLogs","deleteItem","get","console","log","data","errno","notificationStore","success","getItems","error","borrowItem","post","dateFrom","Date","now","getCategories","categories","map","i","filter","c","categoryId","type","items"],"mappings":"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","sourcesContent":["import { observable, action, runInAction, computed } from 'mobx';\r\nimport Axios from 'axios';\r\n\r\nclass VirtualWarehouseViewStore {\r\n    @observable\r\n    categories;\r\n    @observable\r\n    items;\r\n\r\n    @computed\r\n    get isOwner() {\r\n        if (this.rootStore.authStore.loggedInUser.hasOwnProperty('name')) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n        this.companyId = this.rootStore.authStore.loggedInUser.hasOwnProperty('name') ? this.rootStore.authStore.loggedInUser.id : this.rootStore.authStore.loggedInUser.companyId;\r\n        this.userId = !this.rootStore.authStore.loggedInUser.hasOwnProperty('name') ? this.rootStore.authStore.loggedInUser.id : null;\r\n        this.actions = {\r\n            navigateEditItem: (id) => {\r\n                this.rootStore.routerStore.goTo('editItem', { id: id });\r\n            },\r\n            navigateItemLogs: (id) => {\r\n                debugger\r\n                this.rootStore.routerStore.goTo('itemLogs', { id: id });\r\n            },\r\n            deleteItem: async (id) => {\r\n                const deleteItem = await Axios.get('http://localhost:3001/api/delete/item/' + id);\r\n                console.log('Success', deleteItem);\r\n                if (!deleteItem.data.errno) {\r\n                    this.rootStore.notificationStore.success('Success');\r\n                    await this.getItems();\r\n                }\r\n                else {\r\n                    this.rootStore.notificationStore.error('Error');\r\n                }\r\n            },\r\n            borrowItem: async (id) => {\r\n                const borrowItem = await Axios.post('http://localhost:3001/api/borrow/item/' + id + '/' + this.userId, { dateFrom: Date.now() });\r\n                console.log('Success', borrowItem);\r\n                if (!borrowItem.data.errno) {\r\n                    this.rootStore.notificationStore.success('Success')\r\n                    await this.getItems();\r\n                }\r\n                else {\r\n                    this.rootStore.notificationStore.error('Error');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    @action.bound\r\n    getCategories = async () => {\r\n        const getCategories = await Axios.get('http://localhost:3001/api/get/categories/' + this.companyId);\r\n        console.log('Success', getCategories);\r\n        runInAction(() => {\r\n            this.categories = getCategories;\r\n        })\r\n    }\r\n\r\n    @action.bound\r\n    getItems = async () => {\r\n        const getItems = await Axios.get('http://localhost:3001/api/get/items/' + this.companyId);\r\n        console.log('Success', getItems);\r\n        getItems.data = getItems.data.map(i => {\r\n            this.categories.data.filter(c => c.id === i.categoryId ? i.type = c.type : null);\r\n            return i;\r\n        })\r\n        runInAction(() => {\r\n            this.items = getItems;\r\n        })\r\n    }\r\n\r\n    navigateDashboard = () => {\r\n        this.rootStore.routerStore.goTo('dashboard');\r\n    }\r\n}\r\n\r\nexport default VirtualWarehouseViewStore;"]},"metadata":{},"sourceType":"module"}