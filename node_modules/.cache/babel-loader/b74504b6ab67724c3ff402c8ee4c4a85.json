{"ast":null,"code":"import _initializerDefineProperty from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"D:\\\\management-tool\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _temp;\n\nimport { observable, action, runInAction } from 'mobx';\nimport { CreateCategoryForm, EditCategoryForm } from '../forms';\nimport Axios from 'axios';\nlet EditCategoryViewStore = (_class = (_temp = class EditCategoryViewStore {\n  constructor(rootStore) {\n    _initializerDefineProperty(this, \"category\", _descriptor, this);\n\n    this.navigateCreateCategory = () => {\n      this.rootStore.routerStore.goTo('createCategory');\n    };\n\n    this.rootStore = rootStore;\n    this.form = new EditItemForm({\n      onInit: async () => {\n        await this.getCategories();\n        await this.getItem();\n        this.form.set('value', {\n          name: this.item.data[0].name,\n          categoryId: this.item.data[0].categoryId\n        });\n      },\n      onSuccess: async form => {\n        const values = form.values();\n        console.log('Success', values);\n\n        try {\n          const editItem = await Axios.post('http://localhost:3001/api/edit/item/' + this.itemId, {\n            name: values.name,\n            categoryId: values.categoryId\n          });\n          console.log('Success', editItem);\n          !editItem.data.errno ? this.rootStore.notificationStore.success('Success') : this.rootStore.notificationStore.error('Error');\n        } catch (error) {\n          this.form.invalidate(error.message);\n          this.rootStore.notificationStore.error(error.message);\n        }\n      },\n      onError: form => {\n        const values = form.values();\n        console.log('Error', values);\n        this.rootStore.notificationStore.error('Error');\n      }\n    });\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"category\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n})), _class);\nexport default EditCategoryViewStore;","map":{"version":3,"sources":["D:/management-tool/src/client/modules/category/stores/EditCategoryViewStore.js"],"names":["observable","action","runInAction","CreateCategoryForm","EditCategoryForm","Axios","EditCategoryViewStore","constructor","rootStore","navigateCreateCategory","routerStore","goTo","form","EditItemForm","onInit","getCategories","getItem","set","name","item","data","categoryId","onSuccess","values","console","log","editItem","post","itemId","errno","notificationStore","success","error","invalidate","message","onError"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,WAA7B,QAAgD,MAAhD;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,QAAqD,UAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;IAEMC,qB,sBAAN,MAAMA,qBAAN,CAA4B;AAGxBC,EAAAA,WAAW,CAACC,SAAD,EAAY;AAAA;;AAAA,SA4BvBC,sBA5BuB,GA4BE,MAAM;AAC3B,WAAKD,SAAL,CAAeE,WAAf,CAA2BC,IAA3B,CAAgC,gBAAhC;AACH,KA9BsB;;AACnB,SAAKH,SAAL,GAAiBA,SAAjB;AACA,SAAKI,IAAL,GAAY,IAAIC,YAAJ,CAAiB;AACzBC,MAAAA,MAAM,EAAE,YAAY;AAChB,cAAM,KAAKC,aAAL,EAAN;AACA,cAAM,KAAKC,OAAL,EAAN;AACA,aAAKJ,IAAL,CAAUK,GAAV,CAAc,OAAd,EAAuB;AAAEC,UAAAA,IAAI,EAAE,KAAKC,IAAL,CAAUC,IAAV,CAAe,CAAf,EAAkBF,IAA1B;AAAgCG,UAAAA,UAAU,EAAE,KAAKF,IAAL,CAAUC,IAAV,CAAe,CAAf,EAAkBC;AAA9D,SAAvB;AACH,OALwB;AAMzBC,MAAAA,SAAS,EAAE,MAAOV,IAAP,IAAgB;AACvB,cAAMW,MAAM,GAAGX,IAAI,CAACW,MAAL,EAAf;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB;;AACA,YAAI;AACA,gBAAMG,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAN,CAAW,yCAAyC,KAAKC,MAAzD,EAAiE;AAAEV,YAAAA,IAAI,EAAEK,MAAM,CAACL,IAAf;AAAqBG,YAAAA,UAAU,EAAEE,MAAM,CAACF;AAAxC,WAAjE,CAAvB;AACAG,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,QAAvB;AACA,WAACA,QAAQ,CAACN,IAAT,CAAcS,KAAf,GAAuB,KAAKrB,SAAL,CAAesB,iBAAf,CAAiCC,OAAjC,CAAyC,SAAzC,CAAvB,GAA6E,KAAKvB,SAAL,CAAesB,iBAAf,CAAiCE,KAAjC,CAAuC,OAAvC,CAA7E;AACH,SAJD,CAIE,OAAOA,KAAP,EAAc;AACZ,eAAKpB,IAAL,CAAUqB,UAAV,CAAqBD,KAAK,CAACE,OAA3B;AACA,eAAK1B,SAAL,CAAesB,iBAAf,CAAiCE,KAAjC,CAAuCA,KAAK,CAACE,OAA7C;AACH;AACJ,OAjBwB;AAkBzBC,MAAAA,OAAO,EAAGvB,IAAD,IAAU;AACf,cAAMW,MAAM,GAAGX,IAAI,CAACW,MAAL,EAAf;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,MAArB;AACA,aAAKf,SAAL,CAAesB,iBAAf,CAAiCE,KAAjC,CAAuC,OAAvC;AACH;AAtBwB,KAAjB,CAAZ;AAwBH;;AA7BuB,C,kFACvBhC,U;;;;;;AAmCL,eAAeM,qBAAf","sourcesContent":["import { observable, action, runInAction } from 'mobx';\r\nimport { CreateCategoryForm, EditCategoryForm } from '../forms';\r\nimport Axios from 'axios';\r\n\r\nclass EditCategoryViewStore {\r\n    @observable category;\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n        this.form = new EditItemForm({\r\n            onInit: async () => {\r\n                await this.getCategories();\r\n                await this.getItem();\r\n                this.form.set('value', { name: this.item.data[0].name, categoryId: this.item.data[0].categoryId })\r\n            },\r\n            onSuccess: async (form) => {\r\n                const values = form.values();\r\n                console.log('Success', values);\r\n                try {\r\n                    const editItem = await Axios.post('http://localhost:3001/api/edit/item/' + this.itemId, { name: values.name, categoryId: values.categoryId });\r\n                    console.log('Success', editItem);\r\n                    !editItem.data.errno ? this.rootStore.notificationStore.success('Success') : this.rootStore.notificationStore.error('Error');\r\n                } catch (error) {\r\n                    this.form.invalidate(error.message);\r\n                    this.rootStore.notificationStore.error(error.message);\r\n                }\r\n            },\r\n            onError: (form) => {\r\n                const values = form.values();\r\n                console.log('Error', values);\r\n                this.rootStore.notificationStore.error('Error');\r\n            }\r\n        })\r\n    }\r\n\r\n    navigateCreateCategory = () => {\r\n        this.rootStore.routerStore.goTo('createCategory');\r\n    }\r\n}\r\n\r\nexport default EditCategoryViewStore;"]},"metadata":{},"sourceType":"module"}