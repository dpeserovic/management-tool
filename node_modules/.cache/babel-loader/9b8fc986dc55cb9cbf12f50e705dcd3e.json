{"ast":null,"code":"import { RouterState } from 'mobx-state-router';\n\nconst checkForUserSession = (fromState, toState, routerStore) => {\n  if (this.rootStore.authStore.loggedInUser) {\n    return Promise.resolve();\n  } else {\n    return Promise.reject(new RouterState('login'));\n  }\n};\n\nexport const routes = [{\n  name: 'login',\n  pattern: '/'\n}, {\n  name: 'register',\n  pattern: '/register'\n}, {\n  name: 'dashboard',\n  pattern: '/dashboard',\n  beforeEnter: checkForUserSession\n}, {\n  name: 'createCategory',\n  pattern: '/createCategory',\n  beforeEnter: checkForUserSession\n}, {\n  name: 'addItem',\n  pattern: '/addItem',\n  beforeEnter: checkForUserSession\n}, {\n  name: 'myBackpack',\n  pattern: '/myBackpack',\n  beforeEnter: checkForUserSession\n}, {\n  name: 'virtualWarehouse',\n  pattern: '/virtualWarehouse',\n  beforeEnter: checkForUserSession\n}, {\n  name: 'editItem',\n  pattern: '/editItem/:id',\n  beforeEnter: checkForUserSession\n}, {\n  name: 'myProfile',\n  pattern: '/myProfile',\n  beforeEnter: checkForUserSession\n}, {\n  name: 'notFound',\n  pattern: '/notFound'\n}];","map":{"version":3,"sources":["D:/management-tool/src/client/common/router/routes.js"],"names":["RouterState","checkForUserSession","fromState","toState","routerStore","rootStore","authStore","loggedInUser","Promise","resolve","reject","routes","name","pattern","beforeEnter"],"mappings":"AAAA,SAASA,WAAT,QAA4B,mBAA5B;;AAEA,MAAMC,mBAAmB,GAAG,CAACC,SAAD,EAAYC,OAAZ,EAAqBC,WAArB,KAAqC;AAC7D,MAAI,KAAKC,SAAL,CAAeC,SAAf,CAAyBC,YAA7B,EAA2C;AACvC,WAAOC,OAAO,CAACC,OAAR,EAAP;AACH,GAFD,MAGK;AACD,WAAOD,OAAO,CAACE,MAAR,CAAe,IAAIV,WAAJ,CAAgB,OAAhB,CAAf,CAAP;AACH;AACJ,CAPD;;AASA,OAAO,MAAMW,MAAM,GAAG,CAClB;AACIC,EAAAA,IAAI,EAAE,OADV;AAEIC,EAAAA,OAAO,EAAE;AAFb,CADkB,EAKlB;AACID,EAAAA,IAAI,EAAE,UADV;AAEIC,EAAAA,OAAO,EAAE;AAFb,CALkB,EASlB;AACID,EAAAA,IAAI,EAAE,WADV;AAEIC,EAAAA,OAAO,EAAE,YAFb;AAGIC,EAAAA,WAAW,EAAEb;AAHjB,CATkB,EAclB;AACIW,EAAAA,IAAI,EAAE,gBADV;AAEIC,EAAAA,OAAO,EAAE,iBAFb;AAGIC,EAAAA,WAAW,EAAEb;AAHjB,CAdkB,EAmBlB;AACIW,EAAAA,IAAI,EAAE,SADV;AAEIC,EAAAA,OAAO,EAAE,UAFb;AAGIC,EAAAA,WAAW,EAAEb;AAHjB,CAnBkB,EAwBlB;AACIW,EAAAA,IAAI,EAAE,YADV;AAEIC,EAAAA,OAAO,EAAE,aAFb;AAGIC,EAAAA,WAAW,EAAEb;AAHjB,CAxBkB,EA6BlB;AACIW,EAAAA,IAAI,EAAE,kBADV;AAEIC,EAAAA,OAAO,EAAE,mBAFb;AAGIC,EAAAA,WAAW,EAAEb;AAHjB,CA7BkB,EAkClB;AACIW,EAAAA,IAAI,EAAE,UADV;AAEIC,EAAAA,OAAO,EAAE,eAFb;AAGIC,EAAAA,WAAW,EAAEb;AAHjB,CAlCkB,EAuClB;AACIW,EAAAA,IAAI,EAAE,WADV;AAEIC,EAAAA,OAAO,EAAE,YAFb;AAGIC,EAAAA,WAAW,EAAEb;AAHjB,CAvCkB,EA4ClB;AACIW,EAAAA,IAAI,EAAE,UADV;AAEIC,EAAAA,OAAO,EAAE;AAFb,CA5CkB,CAAf","sourcesContent":["import { RouterState } from 'mobx-state-router';\r\n\r\nconst checkForUserSession = (fromState, toState, routerStore) => {\r\n    if (this.rootStore.authStore.loggedInUser) {\r\n        return Promise.resolve();\r\n    }\r\n    else {\r\n        return Promise.reject(new RouterState('login'));\r\n    }\r\n}\r\n\r\nexport const routes = [\r\n    {\r\n        name: 'login',\r\n        pattern: '/'\r\n    },\r\n    {\r\n        name: 'register',\r\n        pattern: '/register'\r\n    },\r\n    {\r\n        name: 'dashboard',\r\n        pattern: '/dashboard',\r\n        beforeEnter: checkForUserSession\r\n    },\r\n    {\r\n        name: 'createCategory',\r\n        pattern: '/createCategory',\r\n        beforeEnter: checkForUserSession\r\n    },\r\n    {\r\n        name: 'addItem',\r\n        pattern: '/addItem',\r\n        beforeEnter: checkForUserSession\r\n    },\r\n    {\r\n        name: 'myBackpack',\r\n        pattern: '/myBackpack',\r\n        beforeEnter: checkForUserSession\r\n    },\r\n    {\r\n        name: 'virtualWarehouse',\r\n        pattern: '/virtualWarehouse',\r\n        beforeEnter: checkForUserSession\r\n    },\r\n    {\r\n        name: 'editItem',\r\n        pattern: '/editItem/:id',\r\n        beforeEnter: checkForUserSession\r\n    },\r\n    {\r\n        name: 'myProfile',\r\n        pattern: '/myProfile',\r\n        beforeEnter: checkForUserSession\r\n    },\r\n    {\r\n        name: 'notFound',\r\n        pattern: '/notFound'\r\n    }\r\n];"]},"metadata":{},"sourceType":"module"}