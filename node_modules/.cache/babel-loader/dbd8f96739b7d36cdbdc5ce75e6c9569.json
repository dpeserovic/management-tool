{"ast":null,"code":"import { CreateCategoryForm } from '../forms';\nimport Axios from 'axios';\n\nclass CreateCategoryViewStore {\n  constructor(rootStore) {\n    this.navigateDashboard = () => {\n      this.rootStore.routerStore.goTo('dashboard');\n    };\n\n    this.rootStore = rootStore;\n    this.form = new CreateCategoryForm({\n      onSuccess: async form => {\n        const values = form.values();\n        console.log('Success', values);\n\n        try {\n          const createCategory = await Axios.post('http://localhost:3001/api/create/category', {\n            type: values.type,\n            companyId: this.rootStore.authStore.loggedInUser.id\n          });\n          console.log('Success', createCategory);\n\n          if (!createCategory.data.errno) {\n            this.rootStore.notificationStore.success('Success');\n            this.form.clear();\n          } else {\n            this.rootStore.notificationStore.error('Error');\n          }\n        } catch (error) {\n          this.form.invalidate(error.message);\n          this.rootStore.notificationStore.error(error.message);\n        }\n      },\n      onError: form => {\n        const values = form.values();\n        console.log('Error', values);\n        this.rootStore.notificationStore.error('Error');\n      }\n    });\n  }\n\n}\n\nexport default CreateCategoryViewStore;","map":{"version":3,"sources":["D:/management-tool/src/client/modules/category/stores/CreateCategoryViewStore.js"],"names":["CreateCategoryForm","Axios","CreateCategoryViewStore","constructor","rootStore","navigateDashboard","routerStore","goTo","form","onSuccess","values","console","log","createCategory","post","type","companyId","authStore","loggedInUser","id","data","errno","notificationStore","success","clear","error","invalidate","message","onError"],"mappings":"AAAA,SAASA,kBAAT,QAAmC,UAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,uBAAN,CAA8B;AAC1BC,EAAAA,WAAW,CAACC,SAAD,EAAY;AAAA,SA6BvBC,iBA7BuB,GA6BH,MAAM;AACtB,WAAKD,SAAL,CAAeE,WAAf,CAA2BC,IAA3B,CAAgC,WAAhC;AACH,KA/BsB;;AACnB,SAAKH,SAAL,GAAiBA,SAAjB;AACA,SAAKI,IAAL,GAAY,IAAIR,kBAAJ,CAAuB;AAC/BS,MAAAA,SAAS,EAAE,MAAOD,IAAP,IAAgB;AACvB,cAAME,MAAM,GAAGF,IAAI,CAACE,MAAL,EAAf;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB;;AACA,YAAI;AACA,gBAAMG,cAAc,GAAG,MAAMZ,KAAK,CAACa,IAAN,CAAW,2CAAX,EAAwD;AAAEC,YAAAA,IAAI,EAAEL,MAAM,CAACK,IAAf;AAAqBC,YAAAA,SAAS,EAAE,KAAKZ,SAAL,CAAea,SAAf,CAAyBC,YAAzB,CAAsCC;AAAtE,WAAxD,CAA7B;AACAR,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,cAAvB;;AACA,cAAI,CAACA,cAAc,CAACO,IAAf,CAAoBC,KAAzB,EAAgC;AAC5B,iBAAKjB,SAAL,CAAekB,iBAAf,CAAiCC,OAAjC,CAAyC,SAAzC;AACA,iBAAKf,IAAL,CAAUgB,KAAV;AACH,WAHD,MAIK;AACD,iBAAKpB,SAAL,CAAekB,iBAAf,CAAiCG,KAAjC,CAAuC,OAAvC;AACH;AACJ,SAVD,CAUE,OAAOA,KAAP,EAAc;AACZ,eAAKjB,IAAL,CAAUkB,UAAV,CAAqBD,KAAK,CAACE,OAA3B;AACA,eAAKvB,SAAL,CAAekB,iBAAf,CAAiCG,KAAjC,CAAuCA,KAAK,CAACE,OAA7C;AACH;AACJ,OAlB8B;AAmB/BC,MAAAA,OAAO,EAAGpB,IAAD,IAAU;AACf,cAAME,MAAM,GAAGF,IAAI,CAACE,MAAL,EAAf;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,MAArB;AACA,aAAKN,SAAL,CAAekB,iBAAf,CAAiCG,KAAjC,CAAuC,OAAvC;AACH;AAvB8B,KAAvB,CAAZ;AAyBH;;AA5ByB;;AAmC9B,eAAevB,uBAAf","sourcesContent":["import { CreateCategoryForm } from '../forms';\r\nimport Axios from 'axios';\r\n\r\nclass CreateCategoryViewStore {\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n        this.form = new CreateCategoryForm({\r\n            onSuccess: async (form) => {\r\n                const values = form.values();\r\n                console.log('Success', values);\r\n                try {\r\n                    const createCategory = await Axios.post('http://localhost:3001/api/create/category', { type: values.type, companyId: this.rootStore.authStore.loggedInUser.id });\r\n                    console.log('Success', createCategory);\r\n                    if (!createCategory.data.errno) {\r\n                        this.rootStore.notificationStore.success('Success');\r\n                        this.form.clear();\r\n                    }\r\n                    else {\r\n                        this.rootStore.notificationStore.error('Error');\r\n                    }\r\n                } catch (error) {\r\n                    this.form.invalidate(error.message);\r\n                    this.rootStore.notificationStore.error(error.message);\r\n                }\r\n            },\r\n            onError: (form) => {\r\n                const values = form.values();\r\n                console.log('Error', values);\r\n                this.rootStore.notificationStore.error('Error');\r\n            }\r\n        })\r\n    }\r\n\r\n    navigateDashboard = () => {\r\n        this.rootStore.routerStore.goTo('dashboard');\r\n    }\r\n}\r\n\r\nexport default CreateCategoryViewStore;"]},"metadata":{},"sourceType":"module"}