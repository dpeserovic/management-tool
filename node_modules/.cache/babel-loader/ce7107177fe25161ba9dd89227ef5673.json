{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _trim2 = require('lodash/trim');\n\nvar _trim3 = _interopRequireDefault(_trim2);\n\nvar _each2 = require('lodash/each');\n\nvar _each3 = _interopRequireDefault(_each2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _head2 = require('lodash/head');\n\nvar _head3 = _interopRequireDefault(_head2);\n\nvar _split2 = require('lodash/split');\n\nvar _split3 = _interopRequireDefault(_split2);\n\nvar _utils = require('../utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _parser = require('../parser');\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n  Field Utils\n*/\n\n\nexports.default = {\n  /**\n   Fields Selector\n   */\n  select: function select(path) {\n    var fields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var isStrict = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    var $path = _parser2.default.parsePath(path);\n\n    var keys = (0, _split3.default)($path, '.');\n    var head = (0, _head3.default)(keys);\n    keys.shift();\n    var $fields = (0, _isNil3.default)(fields) ? this.fields.get(head) : fields.get(head);\n    var stop = false;\n    (0, _each3.default)(keys, function ($key) {\n      if (stop) return;\n\n      if ((0, _isNil3.default)($fields)) {\n        $fields = undefined;\n        stop = true;\n      } else {\n        $fields = $fields.fields.get($key);\n      }\n    });\n    if (isStrict) _utils2.default.throwError(path, $fields);\n    return $fields;\n  },\n\n  /**\n    Get Container\n   */\n  container: function container($path) {\n    var path = _parser2.default.parsePath(_utils2.default.$try($path, this.path));\n\n    var cpath = (0, _trim3.default)(path.replace(new RegExp('[^./]+$'), ''), '.');\n\n    if (!!this.path && (0, _isNil3.default)($path)) {\n      return cpath !== '' ? this.state.form.select(cpath, null, false) : this.state.form;\n    }\n\n    return cpath !== '' ? this.select(cpath, null, false) : this;\n  },\n\n  /**\n    Has Field\n   */\n  has: function has(path) {\n    return this.fields.has(path);\n  },\n\n  /**\n   Map Fields\n  */\n  map: function map(cb) {\n    return _utils2.default.getObservableMapValues(this.fields).map(cb);\n  },\n\n  /**\n   * Iterates deeply over fields and invokes `iteratee` for each element.\n   * The iteratee is invoked with three arguments: (value, index|key, depth).\n   *\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {Array|Object} [fields=form.fields] fields to iterate over.\n   * @param {number} [depth=1] The recursion depth for internal use.\n   * @returns {Array} Returns [fields.values()] of input [fields] parameter.\n   * @example\n   *\n   * JSON.stringify(form)\n   * // => {\n     *   \"fields\": {\n     *     \"state\": {\n     *       \"fields\": {\n     *         \"city\": {\n     *           \"fields\": { \"places\": {\n     *                \"fields\": {},\n     *                \"key\": \"places\", \"path\": \"state.city.places\", \"$value\": \"NY Places\"\n     *              }\n     *           },\n     *           \"key\": \"city\", \"path\": \"state.city\", \"$value\": \"New York\"\n     *         }\n     *       },\n     *       \"key\": \"state\", \"path\": \"state\", \"$value\": \"USA\"\n     *     }\n     *   }\n     * }\n   *\n   * const data = {};\n   * form.each(field => data[field.path] = field.value);\n   * // => {\n     *   \"state\": \"USA\",\n     *   \"state.city\": \"New York\",\n     *   \"state.city.places\": \"NY Places\"\n     * }\n   *\n   */\n  each: function each(iteratee) {\n    var _this = this;\n\n    var fields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var $fields = fields || this.fields;\n    (0, _each3.default)(_utils2.default.getObservableMapValues($fields), function (field, index) {\n      iteratee(field, index, depth);\n\n      if (field.fields.size !== 0) {\n        _this.each(iteratee, field.fields, depth + 1);\n      }\n    });\n  }\n};\nmodule.exports = exports['default'];","map":{"version":3,"sources":["D:/management-tool/node_modules/mobx-react-form/lib/shared/Utils.js"],"names":["Object","defineProperty","exports","value","_trim2","require","_trim3","_interopRequireDefault","_each2","_each3","_isNil2","_isNil3","_head2","_head3","_split2","_split3","_utils","_utils2","_parser","_parser2","obj","__esModule","default","select","path","fields","arguments","length","undefined","isStrict","$path","parsePath","keys","head","shift","$fields","get","stop","$key","throwError","container","$try","cpath","replace","RegExp","state","form","has","map","cb","getObservableMapValues","each","iteratee","_this","depth","field","index","size","module"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _trim2 = require('lodash/trim');\n\nvar _trim3 = _interopRequireDefault(_trim2);\n\nvar _each2 = require('lodash/each');\n\nvar _each3 = _interopRequireDefault(_each2);\n\nvar _isNil2 = require('lodash/isNil');\n\nvar _isNil3 = _interopRequireDefault(_isNil2);\n\nvar _head2 = require('lodash/head');\n\nvar _head3 = _interopRequireDefault(_head2);\n\nvar _split2 = require('lodash/split');\n\nvar _split3 = _interopRequireDefault(_split2);\n\nvar _utils = require('../utils');\n\nvar _utils2 = _interopRequireDefault(_utils);\n\nvar _parser = require('../parser');\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n  Field Utils\n*/\nexports.default = {\n\n  /**\n   Fields Selector\n   */\n  select: function select(path) {\n    var fields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var isStrict = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n    var $path = _parser2.default.parsePath(path);\n\n    var keys = (0, _split3.default)($path, '.');\n    var head = (0, _head3.default)(keys);\n\n    keys.shift();\n\n    var $fields = (0, _isNil3.default)(fields) ? this.fields.get(head) : fields.get(head);\n\n    var stop = false;\n    (0, _each3.default)(keys, function ($key) {\n      if (stop) return;\n      if ((0, _isNil3.default)($fields)) {\n        $fields = undefined;\n        stop = true;\n      } else {\n        $fields = $fields.fields.get($key);\n      }\n    });\n\n    if (isStrict) _utils2.default.throwError(path, $fields);\n\n    return $fields;\n  },\n\n\n  /**\n    Get Container\n   */\n  container: function container($path) {\n    var path = _parser2.default.parsePath(_utils2.default.$try($path, this.path));\n    var cpath = (0, _trim3.default)(path.replace(new RegExp('[^./]+$'), ''), '.');\n\n    if (!!this.path && (0, _isNil3.default)($path)) {\n      return cpath !== '' ? this.state.form.select(cpath, null, false) : this.state.form;\n    }\n\n    return cpath !== '' ? this.select(cpath, null, false) : this;\n  },\n\n\n  /**\n    Has Field\n   */\n  has: function has(path) {\n    return this.fields.has(path);\n  },\n\n\n  /**\n   Map Fields\n  */\n  map: function map(cb) {\n    return _utils2.default.getObservableMapValues(this.fields).map(cb);\n  },\n\n\n  /**\n   * Iterates deeply over fields and invokes `iteratee` for each element.\n   * The iteratee is invoked with three arguments: (value, index|key, depth).\n   *\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {Array|Object} [fields=form.fields] fields to iterate over.\n   * @param {number} [depth=1] The recursion depth for internal use.\n   * @returns {Array} Returns [fields.values()] of input [fields] parameter.\n   * @example\n   *\n   * JSON.stringify(form)\n   * // => {\n     *   \"fields\": {\n     *     \"state\": {\n     *       \"fields\": {\n     *         \"city\": {\n     *           \"fields\": { \"places\": {\n     *                \"fields\": {},\n     *                \"key\": \"places\", \"path\": \"state.city.places\", \"$value\": \"NY Places\"\n     *              }\n     *           },\n     *           \"key\": \"city\", \"path\": \"state.city\", \"$value\": \"New York\"\n     *         }\n     *       },\n     *       \"key\": \"state\", \"path\": \"state\", \"$value\": \"USA\"\n     *     }\n     *   }\n     * }\n   *\n   * const data = {};\n   * form.each(field => data[field.path] = field.value);\n   * // => {\n     *   \"state\": \"USA\",\n     *   \"state.city\": \"New York\",\n     *   \"state.city.places\": \"NY Places\"\n     * }\n   *\n   */\n  each: function each(iteratee) {\n    var _this = this;\n\n    var fields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    var $fields = fields || this.fields;\n    (0, _each3.default)(_utils2.default.getObservableMapValues($fields), function (field, index) {\n      iteratee(field, index, depth);\n\n      if (field.fields.size !== 0) {\n        _this.each(iteratee, field.fields, depth + 1);\n      }\n    });\n  }\n};\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}